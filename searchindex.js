Search.setIndex({"alltitles": {"1. Inverse Propensity Weighting (IPW)": [[34, "inverse-propensity-weighting-ipw"]], "2. Direct Method (DM)": [[34, "direct-method-dm"]], "3. Doubly Robust Method (DR)": [[34, "doubly-robust-method-dr"]], "Adding side constraints to optimal classification trees": [[30, "adding-side-constraints-to-optimal-classification-trees"]], "Additional Supported Fairness Metrics": [[26, "Additional-Supported-Fairness-Metrics"]], "Attributes": [[10, "attributes"], [21, "attributes"]], "BendersOCT with User-defined Weights": [[27, "BendersOCT-with-User-defined-Weights"]], "CBC Binaries": [[25, "cbc-binaries"]], "Choosing an Objective to Optimize": [[33, "choosing-an-objective-to-optimize"]], "Classes": [[1, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [19, "classes"], [21, "classes"]], "Code of Conduct": [[23, "code-of-conduct"]], "Conditional Statistical Parity": [[31, "conditional-statistical-parity"]], "Documentation Structure": [[24, "documentation-structure"]], "Equal Opportunity": [[31, "equal-opportunity"]], "Equalized Odds": [[31, "equalized-odds"]], "Example 0: Binarization": [[27, "Example-0:-Binarization"]], "Example 1: Synthetic Data Without Specified Shifts": [[28, "Example-1:-Synthetic-Data-Without-Specified-Shifts"]], "Example 1: Varying depth and _lambda": [[27, "Example-1:-Varying-depth-and-_lambda"]], "Example 2: Different Objective Functions": [[27, "Example-2:-Different-Objective-Functions"]], "Example 2: synthetic data with specified shifts": [[28, "Example-2:-synthetic-data-with-specified-shifts"]], "Example 3: UCI Data Example": [[27, "Example-3:-UCI-Data-Example"]], "Example 3: UCI data example": [[28, "Example-3:-UCI-data-example"]], "Example 4: User-defined Weights": [[27, "Example-4:-User-defined-Weights"]], "Example Notebooks": [[29, "example-notebooks"]], "Fair Optimal Classification Trees": [[26, "Fair-Optimal-Classification-Trees"], [31, "fair-optimal-classification-trees"]], "Fairness Metrics": [[31, "fairness-metrics"]], "File a bug report": [[23, "file-a-bug-report"]], "FlowOCT Examples": [[27, "FlowOCT-Examples"]], "FlowOCT with User-defined Weights": [[27, "FlowOCT-with-User-defined-Weights"]], "Functions": [[2, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [22, "functions"]], "Handling Integer Features": [[33, "handling-integer-features"], [34, "handling-integer-features"]], "How to contribute to ODTlearn": [[23, "how-to-contribute-to-odtlearn"]], "Improve the documentation": [[23, "improve-the-documentation"]], "Initialize FairSPOCT classifier with a less strict fairness bound": [[26, "Initialize-FairSPOCT-classifier-with-a-less-strict-fairness-bound"]], "Initialize FairSPOCT classifier with a stricter fairness bound": [[26, "Initialize-FairSPOCT-classifier-with-a-stricter-fairness-bound"]], "Install ODTlearn": [[25, "install-odtlearn"]], "Install Python": [[25, "install-python"]], "Installation Guide": [[25, "installation-guide"]], "Introduction": [[26, "Introduction"]], "Learning Fair Optimal Classification Trees with Statistical Parity": [[26, "Learning-Fair-Optimal-Classification-Trees-with-Statistical-Parity"]], "Loan Approval Dataset": [[26, "Loan-Approval-Dataset"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"]], "ODTlearn API": [[0, "odtlearn-api"]], "Objective Function Choices": [[34, "objective-function-choices"]], "Obtain Gurobi License": [[25, "obtain-gurobi-license"]], "Optimal Classification Trees": [[33, "optimal-classification-trees"]], "Optimal Prescriptive Trees": [[34, "optimal-prescriptive-trees"]], "Optimality": [[33, "optimality"]], "Package Contents": [[10, "package-contents"]], "Predictive Equality": [[31, "predictive-equality"]], "References": [[24, "references"], [27, "References"], [28, "References"], [31, "references"], [33, "references"], [34, "references"], [35, "references"]], "Regularization": [[33, "regularization"]], "Resources for Getting Started": [[24, "resources-for-getting-started"]], "Robust Optimal Classification Trees": [[35, "robust-optimal-classification-trees"]], "RobustOCT Examples": [[28, "RobustOCT-Examples"]], "Specifying the Distribution Shift": [[35, "specifying-the-distribution-shift"]], "Speeding up Computation: Benders\u2019 Decomposition": [[33, "speeding-up-computation-benders-decomposition"]], "Statistical Parity": [[31, "statistical-parity"]], "Submodules": [[10, "submodules"], [20, "submodules"]], "Subpackages": [[10, "subpackages"]], "Tree with Balanced Classification Accuracy Objective": [[27, "Tree-with-Balanced-Classification-Accuracy-Objective"]], "Tree with classification accuracy objective": [[27, "Tree-with-classification-accuracy-objective"]], "Tree with depth = 1": [[27, "Tree-with-depth-=-1"]], "Tree with depth = 2": [[27, "Tree-with-depth-=-2"]], "Tree with depth=2 and Positive _lambda": [[27, "Tree-with-depth=2-and-Positive-_lambda"]], "Usage Example": [[24, "usage-example"]], "User Guide": [[32, "user-guide"]], "What is ODTlearn?": [[24, "what-is-odtlearn"]], "odtlearn": [[10, "module-odtlearn"]], "odtlearn.constrained_oct": [[1, "module-odtlearn.constrained_oct"]], "odtlearn.datasets": [[2, "module-odtlearn.datasets"]], "odtlearn.fair_oct": [[3, "module-odtlearn.fair_oct"]], "odtlearn.flow_oct": [[4, "module-odtlearn.flow_oct"]], "odtlearn.flow_oct_ms": [[5, "module-odtlearn.flow_oct_ms"]], "odtlearn.flow_oct_ss": [[6, "module-odtlearn.flow_oct_ss"]], "odtlearn.flow_opt": [[7, "module-odtlearn.flow_opt"]], "odtlearn.flow_opt_ms": [[8, "module-odtlearn.flow_opt_ms"]], "odtlearn.flow_opt_ss": [[9, "module-odtlearn.flow_opt_ss"]], "odtlearn.opt_ct": [[11, "module-odtlearn.opt_ct"]], "odtlearn.opt_dt": [[12, "module-odtlearn.opt_dt"]], "odtlearn.opt_pt": [[13, "module-odtlearn.opt_pt"]], "odtlearn.robust_oct": [[14, "module-odtlearn.robust_oct"]], "odtlearn.utils": [[20, "module-odtlearn.utils"]], "odtlearn.utils.Tree": [[15, "module-odtlearn.utils.Tree"]], "odtlearn.utils.TreePlotter": [[16, "module-odtlearn.utils.TreePlotter"]], "odtlearn.utils.binarize": [[17, "module-odtlearn.utils.binarize"]], "odtlearn.utils.callback_helpers": [[18, "module-odtlearn.utils.callback_helpers"]], "odtlearn.utils.callbacks": [[19, "module-odtlearn.utils.callbacks"]], "odtlearn.utils.solver": [[21, "module-odtlearn.utils.solver"]], "odtlearn.utils.validation": [[22, "module-odtlearn.utils.validation"]]}, "docnames": ["api", "autoapi/odtlearn/constrained_oct/index", "autoapi/odtlearn/datasets/index", "autoapi/odtlearn/fair_oct/index", "autoapi/odtlearn/flow_oct/index", "autoapi/odtlearn/flow_oct_ms/index", "autoapi/odtlearn/flow_oct_ss/index", "autoapi/odtlearn/flow_opt/index", "autoapi/odtlearn/flow_opt_ms/index", "autoapi/odtlearn/flow_opt_ss/index", "autoapi/odtlearn/index", "autoapi/odtlearn/opt_ct/index", "autoapi/odtlearn/opt_dt/index", "autoapi/odtlearn/opt_pt/index", "autoapi/odtlearn/robust_oct/index", "autoapi/odtlearn/utils/Tree/index", "autoapi/odtlearn/utils/TreePlotter/index", "autoapi/odtlearn/utils/binarize/index", "autoapi/odtlearn/utils/callback_helpers/index", "autoapi/odtlearn/utils/callbacks/index", "autoapi/odtlearn/utils/index", "autoapi/odtlearn/utils/solver/index", "autoapi/odtlearn/utils/validation/index", "contributing", "index", "installation", "notebooks/FairOCT", "notebooks/FlowOCT", "notebooks/RobustOCT", "notebooks/index", "user_guide/adding_constraints", "user_guide/fair_optimal_classification_trees", "user_guide/index", "user_guide/optimal_classification_trees", "user_guide/optimal_prescriptive_trees", "user_guide/optimal_robust_classification_trees"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.md", "autoapi/odtlearn/constrained_oct/index.rst", "autoapi/odtlearn/datasets/index.rst", "autoapi/odtlearn/fair_oct/index.rst", "autoapi/odtlearn/flow_oct/index.rst", "autoapi/odtlearn/flow_oct_ms/index.rst", "autoapi/odtlearn/flow_oct_ss/index.rst", "autoapi/odtlearn/flow_opt/index.rst", "autoapi/odtlearn/flow_opt_ms/index.rst", "autoapi/odtlearn/flow_opt_ss/index.rst", "autoapi/odtlearn/index.rst", "autoapi/odtlearn/opt_ct/index.rst", "autoapi/odtlearn/opt_dt/index.rst", "autoapi/odtlearn/opt_pt/index.rst", "autoapi/odtlearn/robust_oct/index.rst", "autoapi/odtlearn/utils/Tree/index.rst", "autoapi/odtlearn/utils/TreePlotter/index.rst", "autoapi/odtlearn/utils/binarize/index.rst", "autoapi/odtlearn/utils/callback_helpers/index.rst", "autoapi/odtlearn/utils/callbacks/index.rst", "autoapi/odtlearn/utils/index.rst", "autoapi/odtlearn/utils/solver/index.rst", "autoapi/odtlearn/utils/validation/index.rst", "contributing.md", "index.md", "installation.md", "notebooks/FairOCT.ipynb", "notebooks/FlowOCT.ipynb", "notebooks/RobustOCT.ipynb", "notebooks/index.md", "user_guide/adding_constraints.md", "user_guide/fair_optimal_classification_trees.md", "user_guide/index.md", "user_guide/optimal_classification_trees.md", "user_guide/optimal_prescriptive_trees.md", "user_guide/optimal_robust_classification_trees.md"], "indexentries": {"add_constr() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.add_constr", false]], "add_constrs() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.add_constrs", false]], "add_vars() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.add_vars", false]], "balance_scale_data() (in module odtlearn.datasets)": [[2, "odtlearn.datasets.balance_scale_data", false]], "benders_subproblem() (in module odtlearn.utils.callbacks)": [[19, "odtlearn.utils.callbacks.benders_subproblem", false]], "benderscallback (class in odtlearn.utils.callbacks)": [[19, "odtlearn.utils.callbacks.BendersCallback", false]], "bendersoct (class in odtlearn.flow_oct)": [[4, "odtlearn.flow_oct.BendersOCT", false]], "binarize() (in module odtlearn.utils.binarize)": [[17, "odtlearn.utils.binarize.binarize", false]], "binarizer (class in odtlearn.utils.binarize)": [[17, "odtlearn.utils.binarize.Binarizer", false]], "binary (odtlearn.odtl attribute)": [[10, "odtlearn.ODTL.BINARY", false]], "calc_metric() (odtlearn.fair_oct.faircspoct method)": [[3, "odtlearn.fair_oct.FairCSPOCT.calc_metric", false]], "calc_metric() (odtlearn.fair_oct.faireoppoct method)": [[3, "odtlearn.fair_oct.FairEOppOCT.calc_metric", false]], "calc_metric() (odtlearn.fair_oct.fairpeoct method)": [[3, "odtlearn.fair_oct.FairPEOCT.calc_metric", false]], "calc_metric() (odtlearn.fair_oct.fairspoct method)": [[3, "odtlearn.fair_oct.FairSPOCT.calc_metric", false]], "check_binary() (in module odtlearn.utils.validation)": [[22, "odtlearn.utils.validation.check_binary", false]], "check_columns_match() (in module odtlearn.utils.validation)": [[22, "odtlearn.utils.validation.check_columns_match", false]], "check_integer() (in module odtlearn.utils.validation)": [[22, "odtlearn.utils.validation.check_integer", false]], "check_ipw() (in module odtlearn.utils.validation)": [[22, "odtlearn.utils.validation.check_ipw", false]], "check_same_as_x() (in module odtlearn.utils.validation)": [[22, "odtlearn.utils.validation.check_same_as_X", false]], "check_y() (in module odtlearn.utils.validation)": [[22, "odtlearn.utils.validation.check_y", false]], "check_y_hat() (in module odtlearn.utils.validation)": [[22, "odtlearn.utils.validation.check_y_hat", false]], "constrainedoct (class in odtlearn.constrained_oct)": [[1, "odtlearn.constrained_oct.ConstrainedOCT", false]], "continuous (odtlearn.odtl attribute)": [[10, "odtlearn.ODTL.CONTINUOUS", false]], "example_2_data() (in module odtlearn.datasets)": [[2, "odtlearn.datasets.example_2_data", false]], "export() (odtlearn.utils.treeplotter.mplplotter method)": [[16, "odtlearn.utils.TreePlotter.MPLPlotter.export", false]], "fairconstrainedoct (class in odtlearn.fair_oct)": [[3, "odtlearn.fair_oct.FairConstrainedOCT", false]], "faircspoct (class in odtlearn.fair_oct)": [[3, "odtlearn.fair_oct.FairCSPOCT", false]], "faireoddsoct (class in odtlearn.fair_oct)": [[3, "odtlearn.fair_oct.FairEOddsOCT", false]], "faireoppoct (class in odtlearn.fair_oct)": [[3, "odtlearn.fair_oct.FairEOppOCT", false]], "fairness_example() (in module odtlearn.datasets)": [[2, "odtlearn.datasets.fairness_example", false]], "fairness_metric_summary() (odtlearn.fair_oct.fairoct method)": [[3, "odtlearn.fair_oct.FairOCT.fairness_metric_summary", false]], "fairoct (class in odtlearn.fair_oct)": [[3, "odtlearn.fair_oct.FairOCT", false]], "fairpeoct (class in odtlearn.fair_oct)": [[3, "odtlearn.fair_oct.FairPEOCT", false]], "fairspoct (class in odtlearn.fair_oct)": [[3, "odtlearn.fair_oct.FairSPOCT", false]], "fit() (odtlearn.fair_oct.fairconstrainedoct method)": [[3, "odtlearn.fair_oct.FairConstrainedOCT.fit", false]], "fit() (odtlearn.fair_oct.fairoct method)": [[3, "odtlearn.fair_oct.FairOCT.fit", false]], "fit() (odtlearn.flow_oct.bendersoct method)": [[4, "odtlearn.flow_oct.BendersOCT.fit", false]], "fit() (odtlearn.flow_oct.flowoct method)": [[4, "odtlearn.flow_oct.FlowOCT.fit", false]], "fit() (odtlearn.flow_opt.flowopt_dm method)": [[7, "odtlearn.flow_opt.FlowOPT_DM.fit", false]], "fit() (odtlearn.flow_opt.flowopt_dr method)": [[7, "odtlearn.flow_opt.FlowOPT_DR.fit", false]], "fit() (odtlearn.flow_opt.flowopt_ipw method)": [[7, "odtlearn.flow_opt.FlowOPT_IPW.fit", false]], "fit() (odtlearn.opt_dt.optimaldecisiontree method)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.fit", false]], "fit() (odtlearn.robust_oct.robustoct method)": [[14, "odtlearn.robust_oct.RobustOCT.fit", false]], "fit() (odtlearn.utils.binarize.binarizer method)": [[17, "odtlearn.utils.binarize.Binarizer.fit", false]], "flow_oct_example() (in module odtlearn.datasets)": [[2, "odtlearn.datasets.flow_oct_example", false]], "flowoct (class in odtlearn.flow_oct)": [[4, "odtlearn.flow_oct.FlowOCT", false]], "flowoctmultiplesink (class in odtlearn.flow_oct_ms)": [[5, "odtlearn.flow_oct_ms.FlowOCTMultipleSink", false]], "flowoctsinglesink (class in odtlearn.flow_oct_ss)": [[6, "odtlearn.flow_oct_ss.FlowOCTSingleSink", false]], "flowopt_dm (class in odtlearn.flow_opt)": [[7, "odtlearn.flow_opt.FlowOPT_DM", false]], "flowopt_dr (class in odtlearn.flow_opt)": [[7, "odtlearn.flow_opt.FlowOPT_DR", false]], "flowopt_ipw (class in odtlearn.flow_opt)": [[7, "odtlearn.flow_opt.FlowOPT_IPW", false]], "flowoptmultiplesink (class in odtlearn.flow_opt_ms)": [[8, "odtlearn.flow_opt_ms.FlowOPTMultipleSink", false]], "flowoptsinglesink (class in odtlearn.flow_opt_ss)": [[9, "odtlearn.flow_opt_ss.FlowOPTSingleSink", false]], "generate_constrs() (odtlearn.utils.callbacks.benderscallback method)": [[19, "odtlearn.utils.callbacks.BendersCallback.generate_constrs", false]], "generate_constrs() (odtlearn.utils.callbacks.robustbenderscallback method)": [[19, "odtlearn.utils.callbacks.RobustBendersCallback.generate_constrs", false]], "get_all_terminal_paths() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.get_all_terminal_paths", false]], "get_condeqodds() (odtlearn.fair_oct.fairoct method)": [[3, "odtlearn.fair_oct.FairOCT.get_CondEqOdds", false]], "get_csp() (odtlearn.fair_oct.fairoct method)": [[3, "odtlearn.fair_oct.FairOCT.get_CSP", false]], "get_cut_expression() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.get_cut_expression", false]], "get_cut_integer() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.get_cut_integer", false]], "get_eqodds() (odtlearn.fair_oct.fairoct method)": [[3, "odtlearn.fair_oct.FairOCT.get_EqOdds", false]], "get_fill_color() (odtlearn.utils.treeplotter.mplplotter method)": [[16, "odtlearn.utils.TreePlotter.MPLPlotter.get_fill_color", false]], "get_left_exp_integer() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.get_left_exp_integer", false]], "get_nominal_path() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.get_nominal_path", false]], "get_right_exp_integer() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.get_right_exp_integer", false]], "get_sp() (odtlearn.fair_oct.fairoct method)": [[3, "odtlearn.fair_oct.FairOCT.get_SP", false]], "get_target_exp_integer() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.get_target_exp_integer", false]], "get_var_value() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.get_var_value", false]], "grb_cbc_const_map (in module odtlearn.utils.solver)": [[21, "odtlearn.utils.solver.GRB_CBC_CONST_MAP", false]], "integer (odtlearn.odtl attribute)": [[10, "odtlearn.ODTL.INTEGER", false]], "lin_expr() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.lin_expr", false]], "max (odtlearn.odtl attribute)": [[10, "odtlearn.ODTL.MAX", false]], "maximize (odtlearn.odtl attribute)": [[10, "odtlearn.ODTL.MAXIMIZE", false]], "min (odtlearn.odtl attribute)": [[10, "odtlearn.ODTL.MIN", false]], "minimize (odtlearn.odtl attribute)": [[10, "odtlearn.ODTL.MINIMIZE", false]], "module": [[1, "module-odtlearn.constrained_oct", false], [2, "module-odtlearn.datasets", false], [3, "module-odtlearn.fair_oct", false], [4, "module-odtlearn.flow_oct", false], [5, "module-odtlearn.flow_oct_ms", false], [6, "module-odtlearn.flow_oct_ss", false], [7, "module-odtlearn.flow_opt", false], [8, "module-odtlearn.flow_opt_ms", false], [9, "module-odtlearn.flow_opt_ss", false], [10, "module-odtlearn", false], [11, "module-odtlearn.opt_ct", false], [12, "module-odtlearn.opt_dt", false], [13, "module-odtlearn.opt_pt", false], [14, "module-odtlearn.robust_oct", false], [15, "module-odtlearn.utils.Tree", false], [16, "module-odtlearn.utils.TreePlotter", false], [17, "module-odtlearn.utils.binarize", false], [18, "module-odtlearn.utils.callback_helpers", false], [19, "module-odtlearn.utils.callbacks", false], [20, "module-odtlearn.utils", false], [21, "module-odtlearn.utils.solver", false], [22, "module-odtlearn.utils.validation", false]], "mplplotter (class in odtlearn.utils.treeplotter)": [[16, "odtlearn.utils.TreePlotter.MPLPlotter", false]], "name (in module odtlearn)": [[10, "odtlearn.name", false]], "node_to_str() (odtlearn.utils.treeplotter.mplplotter method)": [[16, "odtlearn.utils.TreePlotter.MPLPlotter.node_to_str", false]], "num_constraints (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.num_constraints", false]], "num_decision_vars (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.num_decision_vars", false]], "num_integer_vars (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.num_integer_vars", false]], "num_non_zero (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.num_non_zero", false]], "num_solutions (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.num_solutions", false]], "objective_bound (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.objective_bound", false]], "objective_value (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.objective_value", false]], "odtl (class in odtlearn)": [[10, "odtlearn.ODTL", false]], "odtlearn": [[10, "module-odtlearn", false]], "odtlearn.constrained_oct": [[1, "module-odtlearn.constrained_oct", false]], "odtlearn.datasets": [[2, "module-odtlearn.datasets", false]], "odtlearn.fair_oct": [[3, "module-odtlearn.fair_oct", false]], "odtlearn.flow_oct": [[4, "module-odtlearn.flow_oct", false]], "odtlearn.flow_oct_ms": [[5, "module-odtlearn.flow_oct_ms", false]], "odtlearn.flow_oct_ss": [[6, "module-odtlearn.flow_oct_ss", false]], "odtlearn.flow_opt": [[7, "module-odtlearn.flow_opt", false]], "odtlearn.flow_opt_ms": [[8, "module-odtlearn.flow_opt_ms", false]], "odtlearn.flow_opt_ss": [[9, "module-odtlearn.flow_opt_ss", false]], "odtlearn.opt_ct": [[11, "module-odtlearn.opt_ct", false]], "odtlearn.opt_dt": [[12, "module-odtlearn.opt_dt", false]], "odtlearn.opt_pt": [[13, "module-odtlearn.opt_pt", false]], "odtlearn.robust_oct": [[14, "module-odtlearn.robust_oct", false]], "odtlearn.utils": [[20, "module-odtlearn.utils", false]], "odtlearn.utils.binarize": [[17, "module-odtlearn.utils.binarize", false]], "odtlearn.utils.callback_helpers": [[18, "module-odtlearn.utils.callback_helpers", false]], "odtlearn.utils.callbacks": [[19, "module-odtlearn.utils.callbacks", false]], "odtlearn.utils.solver": [[21, "module-odtlearn.utils.solver", false]], "odtlearn.utils.tree": [[15, "module-odtlearn.utils.Tree", false]], "odtlearn.utils.treeplotter": [[16, "module-odtlearn.utils.TreePlotter", false]], "odtlearn.utils.validation": [[22, "module-odtlearn.utils.validation", false]], "optim_gap (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.optim_gap", false]], "optimalclassificationtree (class in odtlearn.opt_ct)": [[11, "odtlearn.opt_ct.OptimalClassificationTree", false]], "optimaldecisiontree (class in odtlearn.opt_dt)": [[12, "odtlearn.opt_dt.OptimalDecisionTree", false]], "optimalprescriptivetree (class in odtlearn.opt_pt)": [[13, "odtlearn.opt_pt.OptimalPrescriptiveTree", false]], "optimize() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.optimize", false]], "plot_search_progress() (odtlearn.opt_dt.optimaldecisiontree method)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.plot_search_progress", false]], "plot_tree() (odtlearn.opt_ct.optimalclassificationtree method)": [[11, "odtlearn.opt_ct.OptimalClassificationTree.plot_tree", false]], "plot_tree() (odtlearn.opt_pt.optimalprescriptivetree method)": [[13, "odtlearn.opt_pt.OptimalPrescriptiveTree.plot_tree", false]], "plot_tree() (odtlearn.robust_oct.robustoct method)": [[14, "odtlearn.robust_oct.RobustOCT.plot_tree", false]], "predict() (odtlearn.fair_oct.fairconstrainedoct method)": [[3, "odtlearn.fair_oct.FairConstrainedOCT.predict", false]], "predict() (odtlearn.fair_oct.fairoct method)": [[3, "odtlearn.fair_oct.FairOCT.predict", false]], "predict() (odtlearn.flow_oct.bendersoct method)": [[4, "odtlearn.flow_oct.BendersOCT.predict", false]], "predict() (odtlearn.flow_oct.flowoct method)": [[4, "odtlearn.flow_oct.FlowOCT.predict", false]], "predict() (odtlearn.flow_opt.flowopt_dm method)": [[7, "odtlearn.flow_opt.FlowOPT_DM.predict", false]], "predict() (odtlearn.flow_opt.flowopt_dr method)": [[7, "odtlearn.flow_opt.FlowOPT_DR.predict", false]], "predict() (odtlearn.flow_opt.flowopt_ipw method)": [[7, "odtlearn.flow_opt.FlowOPT_IPW.predict", false]], "predict() (odtlearn.opt_dt.optimaldecisiontree method)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.predict", false]], "predict() (odtlearn.robust_oct.robustoct method)": [[14, "odtlearn.robust_oct.RobustOCT.predict", false]], "prep_indices() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.prep_indices", false]], "prescriptive_ex_data() (in module odtlearn.datasets)": [[2, "odtlearn.datasets.prescriptive_ex_data", false]], "print_tree() (odtlearn.opt_ct.optimalclassificationtree method)": [[11, "odtlearn.opt_ct.OptimalClassificationTree.print_tree", false]], "print_tree() (odtlearn.opt_pt.optimalprescriptivetree method)": [[13, "odtlearn.opt_pt.OptimalPrescriptiveTree.print_tree", false]], "print_tree() (odtlearn.robust_oct.robustoct method)": [[14, "odtlearn.robust_oct.RobustOCT.print_tree", false]], "quicksum() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.quicksum", false]], "recurse() (odtlearn.utils.treeplotter.mplplotter method)": [[16, "odtlearn.utils.TreePlotter.MPLPlotter.recurse", false]], "robust_example() (in module odtlearn.datasets)": [[2, "odtlearn.datasets.robust_example", false]], "robust_tree_subproblem() (in module odtlearn.utils.callbacks)": [[19, "odtlearn.utils.callbacks.robust_tree_subproblem", false]], "robustbenderscallback (class in odtlearn.utils.callbacks)": [[19, "odtlearn.utils.callbacks.RobustBendersCallback", false]], "robustness_example() (in module odtlearn.datasets)": [[2, "odtlearn.datasets.robustness_example", false]], "robustoct (class in odtlearn.robust_oct)": [[14, "odtlearn.robust_oct.RobustOCT", false]], "search_progress_log (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.search_progress_log", false]], "set_objective() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.set_objective", false]], "shortest_path_solver() (in module odtlearn.utils.callback_helpers)": [[18, "odtlearn.utils.callback_helpers.shortest_path_solver", false]], "solver (class in odtlearn.utils.solver)": [[21, "odtlearn.utils.solver.Solver", false]], "store_data() (odtlearn.utils.solver.solver method)": [[21, "odtlearn.utils.solver.Solver.store_data", false]], "store_search_progress_log (odtlearn.opt_dt.optimaldecisiontree property)": [[12, "odtlearn.opt_dt.OptimalDecisionTree.store_search_progress_log", false]], "transform() (odtlearn.utils.binarize.binarizer method)": [[17, "odtlearn.utils.binarize.Binarizer.transform", false]]}, "objects": {"": [[10, 0, 0, "-", "odtlearn"]], "odtlearn": [[10, 1, 1, "", "ODTL"], [1, 0, 0, "-", "constrained_oct"], [2, 0, 0, "-", "datasets"], [3, 0, 0, "-", "fair_oct"], [4, 0, 0, "-", "flow_oct"], [5, 0, 0, "-", "flow_oct_ms"], [6, 0, 0, "-", "flow_oct_ss"], [7, 0, 0, "-", "flow_opt"], [8, 0, 0, "-", "flow_opt_ms"], [9, 0, 0, "-", "flow_opt_ss"], [10, 5, 1, "", "name"], [11, 0, 0, "-", "opt_ct"], [12, 0, 0, "-", "opt_dt"], [13, 0, 0, "-", "opt_pt"], [14, 0, 0, "-", "robust_oct"], [20, 0, 0, "-", "utils"]], "odtlearn.ODTL": [[10, 2, 1, "", "BINARY"], [10, 2, 1, "", "CONTINUOUS"], [10, 2, 1, "", "INTEGER"], [10, 2, 1, "", "MAX"], [10, 2, 1, "", "MAXIMIZE"], [10, 2, 1, "", "MIN"], [10, 2, 1, "", "MINIMIZE"]], "odtlearn.constrained_oct": [[1, 1, 1, "", "ConstrainedOCT"]], "odtlearn.datasets": [[2, 3, 1, "", "balance_scale_data"], [2, 3, 1, "", "example_2_data"], [2, 3, 1, "", "fairness_example"], [2, 3, 1, "", "flow_oct_example"], [2, 3, 1, "", "prescriptive_ex_data"], [2, 3, 1, "", "robust_example"], [2, 3, 1, "", "robustness_example"]], "odtlearn.fair_oct": [[3, 1, 1, "", "FairCSPOCT"], [3, 1, 1, "", "FairConstrainedOCT"], [3, 1, 1, "", "FairEOddsOCT"], [3, 1, 1, "", "FairEOppOCT"], [3, 1, 1, "", "FairOCT"], [3, 1, 1, "", "FairPEOCT"], [3, 1, 1, "", "FairSPOCT"]], "odtlearn.fair_oct.FairCSPOCT": [[3, 4, 1, "", "calc_metric"]], "odtlearn.fair_oct.FairConstrainedOCT": [[3, 4, 1, "", "fit"], [3, 4, 1, "", "predict"]], "odtlearn.fair_oct.FairEOppOCT": [[3, 4, 1, "", "calc_metric"]], "odtlearn.fair_oct.FairOCT": [[3, 4, 1, "", "fairness_metric_summary"], [3, 4, 1, "", "fit"], [3, 4, 1, "", "get_CSP"], [3, 4, 1, "", "get_CondEqOdds"], [3, 4, 1, "", "get_EqOdds"], [3, 4, 1, "", "get_SP"], [3, 4, 1, "", "predict"]], "odtlearn.fair_oct.FairPEOCT": [[3, 4, 1, "", "calc_metric"]], "odtlearn.fair_oct.FairSPOCT": [[3, 4, 1, "", "calc_metric"]], "odtlearn.flow_oct": [[4, 1, 1, "", "BendersOCT"], [4, 1, 1, "", "FlowOCT"]], "odtlearn.flow_oct.BendersOCT": [[4, 4, 1, "", "fit"], [4, 4, 1, "", "predict"]], "odtlearn.flow_oct.FlowOCT": [[4, 4, 1, "", "fit"], [4, 4, 1, "", "predict"]], "odtlearn.flow_oct_ms": [[5, 1, 1, "", "FlowOCTMultipleSink"]], "odtlearn.flow_oct_ss": [[6, 1, 1, "", "FlowOCTSingleSink"]], "odtlearn.flow_opt": [[7, 1, 1, "", "FlowOPT_DM"], [7, 1, 1, "", "FlowOPT_DR"], [7, 1, 1, "", "FlowOPT_IPW"]], "odtlearn.flow_opt.FlowOPT_DM": [[7, 4, 1, "", "fit"], [7, 4, 1, "", "predict"]], "odtlearn.flow_opt.FlowOPT_DR": [[7, 4, 1, "", "fit"], [7, 4, 1, "", "predict"]], "odtlearn.flow_opt.FlowOPT_IPW": [[7, 4, 1, "", "fit"], [7, 4, 1, "", "predict"]], "odtlearn.flow_opt_ms": [[8, 1, 1, "", "FlowOPTMultipleSink"]], "odtlearn.flow_opt_ss": [[9, 1, 1, "", "FlowOPTSingleSink"]], "odtlearn.opt_ct": [[11, 1, 1, "", "OptimalClassificationTree"]], "odtlearn.opt_ct.OptimalClassificationTree": [[11, 4, 1, "", "plot_tree"], [11, 4, 1, "", "print_tree"]], "odtlearn.opt_dt": [[12, 1, 1, "", "OptimalDecisionTree"]], "odtlearn.opt_dt.OptimalDecisionTree": [[12, 4, 1, "", "fit"], [12, 6, 1, "", "num_constraints"], [12, 6, 1, "", "num_decision_vars"], [12, 6, 1, "", "num_integer_vars"], [12, 6, 1, "", "num_non_zero"], [12, 6, 1, "", "num_solutions"], [12, 6, 1, "", "objective_bound"], [12, 6, 1, "", "objective_value"], [12, 6, 1, "", "optim_gap"], [12, 4, 1, "", "plot_search_progress"], [12, 4, 1, "", "predict"], [12, 6, 1, "", "search_progress_log"], [12, 6, 1, "", "store_search_progress_log"]], "odtlearn.opt_pt": [[13, 1, 1, "", "OptimalPrescriptiveTree"]], "odtlearn.opt_pt.OptimalPrescriptiveTree": [[13, 4, 1, "", "plot_tree"], [13, 4, 1, "", "print_tree"]], "odtlearn.robust_oct": [[14, 1, 1, "", "RobustOCT"]], "odtlearn.robust_oct.RobustOCT": [[14, 4, 1, "", "fit"], [14, 4, 1, "", "plot_tree"], [14, 4, 1, "", "predict"], [14, 4, 1, "", "print_tree"]], "odtlearn.utils": [[15, 0, 0, "-", "Tree"], [16, 0, 0, "-", "TreePlotter"], [17, 0, 0, "-", "binarize"], [18, 0, 0, "-", "callback_helpers"], [19, 0, 0, "-", "callbacks"], [21, 0, 0, "-", "solver"], [22, 0, 0, "-", "validation"]], "odtlearn.utils.TreePlotter": [[16, 1, 1, "", "MPLPlotter"]], "odtlearn.utils.TreePlotter.MPLPlotter": [[16, 4, 1, "", "export"], [16, 4, 1, "", "get_fill_color"], [16, 4, 1, "", "node_to_str"], [16, 4, 1, "", "recurse"]], "odtlearn.utils.binarize": [[17, 1, 1, "", "Binarizer"], [17, 3, 1, "", "binarize"]], "odtlearn.utils.binarize.Binarizer": [[17, 4, 1, "", "fit"], [17, 4, 1, "", "transform"]], "odtlearn.utils.callback_helpers": [[18, 3, 1, "", "get_all_terminal_paths"], [18, 3, 1, "", "get_cut_expression"], [18, 3, 1, "", "get_cut_integer"], [18, 3, 1, "", "get_left_exp_integer"], [18, 3, 1, "", "get_nominal_path"], [18, 3, 1, "", "get_right_exp_integer"], [18, 3, 1, "", "get_target_exp_integer"], [18, 3, 1, "", "shortest_path_solver"]], "odtlearn.utils.callbacks": [[19, 1, 1, "", "BendersCallback"], [19, 1, 1, "", "RobustBendersCallback"], [19, 3, 1, "", "benders_subproblem"], [19, 3, 1, "", "robust_tree_subproblem"]], "odtlearn.utils.callbacks.BendersCallback": [[19, 4, 1, "", "generate_constrs"]], "odtlearn.utils.callbacks.RobustBendersCallback": [[19, 4, 1, "", "generate_constrs"]], "odtlearn.utils.solver": [[21, 5, 1, "", "GRB_CBC_CONST_MAP"], [21, 1, 1, "", "Solver"]], "odtlearn.utils.solver.Solver": [[21, 4, 1, "", "add_constr"], [21, 4, 1, "", "add_constrs"], [21, 4, 1, "", "add_vars"], [21, 4, 1, "", "get_var_value"], [21, 4, 1, "", "lin_expr"], [21, 4, 1, "", "optimize"], [21, 4, 1, "", "prep_indices"], [21, 4, 1, "", "quicksum"], [21, 4, 1, "", "set_objective"], [21, 4, 1, "", "store_data"]], "odtlearn.utils.validation": [[22, 3, 1, "", "check_binary"], [22, 3, 1, "", "check_columns_match"], [22, 3, 1, "", "check_integer"], [22, 3, 1, "", "check_ipw"], [22, 3, 1, "", "check_same_as_X"], [22, 3, 1, "", "check_y"], [22, 3, 1, "", "check_y_hat"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:data", "6": "py:property"}, "terms": {"": [2, 11, 12, 13, 14, 23, 24, 26, 27, 28, 31, 33, 34, 35], "0": [2, 3, 4, 7, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 26, 28, 30, 31, 33, 35], "00": [26, 27, 28], "0000": [26, 27, 28], "00000": [27, 28], "0000000": [27, 28], "000000000000e": 27, "000000e": 27, "00463": 27, "00467936e": 26, "00532": 27, "00e": [26, 27, 28], "01": [26, 27, 28], "01333": 27, "01765": 27, "01799613e": 26, "02": [26, 27, 28], "02174": 27, "02237": 28, "025000000000e": 28, "02632": 27, "02737": 27, "03": [26, 27, 28], "03327": 27, "03478": 27, "04": [26, 27, 28], "05": [26, 27, 28], "051e": 26, "05663007e": 26, "06": [26, 27, 28], "07": 26, "07059": 27, "071429": 26, "07618020e": 26, "07e": 26, "08": 26, "08036": 27, "08333": 27, "08e": 26, "09": [26, 27], "0922": 28, "092213": 28, "09524": 27, "09932": [24, 30, 31], "09e": 26, "0x1ad65f5a": 27, "0x28902962": 27, "0x3bc6df12": 27, "0x3e3f455b": 27, "0x43381646": 26, "0x51470803": 27, "0x5e9209d1": 27, "0x75b5cba0": 27, "0x78ba3dea": 28, "0x7a7d351": 26, "0xa5b9a46b": 27, "0xaeff5467": 27, "0xafd32360": 28, "0xf6c20781": 27, "1": [1, 2, 3, 4, 7, 8, 11, 12, 13, 14, 16, 17, 18, 21, 22, 24, 26, 30, 31, 33, 35], "10": [25, 26, 27, 28, 33], "100": [24, 26, 27, 28], "1000": 28, "100000": 27, "1001": 28, "102": 27, "1024": 27, "1028": 26, "104": 26, "10500": 27, "105000e": 27, "1072": 28, "1073741824": [26, 27, 28], "109e": 26, "11": [26, 27, 28], "110": 27, "111": 27, "11149": 28, "112": [27, 28], "1132": 27, "1143": 27, "1153": 27, "1154": 26, "1180": 27, "11e": 26, "12": [26, 27, 28], "120": 27, "121": 28, "122": 28, "12273": 26, "123": 28, "124": [26, 28], "125": 28, "12500": 27, "126": 28, "1290": 27, "12e": 26, "13": [26, 27, 28], "130": [27, 28], "1310": 27, "1319": 28, "134": 27, "135": 26, "1361": 27, "13628": [24, 34], "138": 26, "139": 26, "1398": 27, "13e": 26, "14": [26, 27, 28], "140": [26, 27], "141": [26, 27], "143": 27, "144": 27, "14472": 27, "145": 27, "146": 27, "147": 27, "14706": 27, "148": 26, "14e": 26, "15": [26, 27, 28], "150674": 27, "151": 28, "153": 28, "155": 27, "1556": 27, "1561": 27, "157": 27, "159": 26, "15965": [24, 27, 33], "16": [26, 27, 28], "16000": 26, "1600000": 26, "1611": 27, "16134346e": 26, "1629": 27, "164": 26, "16444": 26, "16497": 27, "166": 27, "16667": 27, "16715": 27, "169": 28, "17": [26, 27], "170": 28, "17000": 26, "1700000": 26, "17292": 26, "173": [27, 28], "173081": 28, "1733": 27, "17455": 26, "17468": 26, "17701": 26, "17838": 26, "17882": 26, "17900": 26, "1797": 27, "17e": 26, "18": [26, 27, 28], "1800": 14, "18000": 26, "1800000": 26, "180000000000e": 27, "180000e": 27, "18130": 26, "18167": 26, "1831": 26, "18390": 26, "186": 27, "187": 27, "18750": 26, "18862169e": 26, "19": [26, 27, 28], "19000": 26, "1900000": 26, "19003": 26, "193": 27, "196": 27, "19713": 26, "198": 27, "19909": 28, "1b": 2, "1e": [26, 27, 28], "2": [2, 3, 4, 7, 12, 17, 22, 25, 26, 30, 33], "20": [26, 27, 28], "200": [27, 28], "20000": 26, "2000000": 26, "2011": 34, "2019": [27, 28], "2021": [24, 27, 31, 33, 34, 35], "2022": [24, 28, 31, 34, 35], "2024": 28, "2025": [26, 27], "203": 27, "2041": 26, "205": 27, "206": 28, "209": [26, 27], "21": [26, 27, 28], "2103": [24, 27, 33], "2108": [24, 34], "21106": 28, "2163": 27, "21668": 27, "21981": 26, "22": [24, 26, 27], "22000": 26, "2200000": 26, "2201": [24, 30, 31], "224": 27, "225000000000e": 28, "22893": 28, "23": [27, 28], "233": 27, "23554": 28, "236": [27, 28], "237": 27, "2375": 27, "24": [27, 28], "24074": 28, "247525": 3, "249": 27, "24e": 26, "25": [27, 28], "250": 27, "25000": [26, 28], "2500000": [26, 28], "2519": 28, "257": 28, "257426": 3, "26": [27, 28], "260": 26, "26000": 26, "2600000": 26, "260000e": 28, "26563": 27, "266": 26, "26793": 27, "269": 27, "26e": 26, "27": [2, 27, 28], "2715": 28, "272": 27, "2721": 27, "274": 27, "27513": 28, "275424972886112": 28, "275425": 28, "2759": 26, "2761": 26, "2787": 26, "2789": 26, "28": [26, 27, 28], "2817": 26, "283": 27, "28th": 34, "29": [27, 28], "290": 27, "2900000": 26, "291": 27, "29251644e": 26, "293": 27, "29354": 26, "294": 27, "295": 26, "296": 27, "299": 27, "299e": 26, "2b": 2, "2d": 7, "2e": [26, 27, 28], "2rc0": [26, 27, 28], "2w": 2, "3": [2, 3, 7, 11, 13, 14, 16, 17, 22, 26], "30": [26, 27, 28], "300": [7, 13, 28], "30000": 27, "300000000000e": 27, "300000e": [27, 28], "30675595e": 26, "308": 27, "31": [26, 27, 28], "312": 27, "31250": 27, "313": 27, "314": 27, "315": 27, "316": 27, "318": 27, "319": 27, "31e": 26, "32": [26, 27, 28], "321": 27, "322": [26, 27], "324": 26, "325": 27, "325000000000e": 28, "327": 27, "328": 27, "329": 27, "3292092": 27, "33": [24, 26, 27, 28], "330": 27, "333": 28, "33333": 27, "3367": 26, "338": 27, "339": 26, "33926": 27, "34": [27, 28], "340": 26, "3419": 27, "342": 26, "344": 26, "345": 26, "345825": 28, "34e": 26, "35": [27, 28], "358": 27, "35e": 26, "36": [27, 28], "36000": 26, "3600000": 26, "3627": 28, "3648": 28, "366": 27, "367": 27, "36e": 26, "37": [27, 28], "371": 27, "374": 26, "37500": 27, "3755": 26, "376": 26, "3785": 26, "38": [27, 28], "3861": 27, "3865": 26, "38889": 28, "38947": 27, "38e": 26, "39": [26, 27, 28], "398": 27, "399": 27, "3f": 26, "3w": 2, "4": [2, 3, 7, 17, 22, 26, 28, 33], "40": [26, 27, 28], "400": 27, "40000": 27, "400000e": 27, "401": 26, "402": 27, "403": 27, "4038": 26, "409": 27, "40e": 26, "41": [27, 28], "412": 27, "413": 27, "414": 27, "418": 27, "41e": 26, "42": [24, 26, 27, 28], "427": 26, "42743": 27, "43": [26, 27, 28], "43000": 26, "4300000": 26, "430000000000e": 27, "43154251e": 26, "44": [27, 28], "4418604651162791": 28, "4454": 27, "448": 26, "45": [27, 28], "451": 28, "456667e": 27, "45e": 26, "46": [27, 28], "460": 27, "460000e": 27, "463": 27, "4635": 27, "46e": 26, "47": [26, 27, 28], "472": 28, "475": 27, "47e": 26, "48": [26, 27, 28], "48148": 27, "482e": 26, "483": 27, "49": 28, "49e": 26, "4e": 27, "4w": 2, "5": [2, 7, 11, 13, 16, 17, 22, 26, 27, 28, 33], "50": [27, 28], "50000": [27, 28], "500000": 26, "5000000": [27, 28], "500000000000e": 28, "500000e": 27, "50336865e": 26, "50e": 26, "51": [27, 28], "5116279069767442": 28, "5122": 26, "5135": 28, "516269": 26, "519": 28, "51e": 26, "52": [27, 28], "5288462": 27, "52e": 26, "53": [27, 28], "533": 27, "53640": 28, "53e": 26, "54": [27, 28], "54167": [27, 28], "5421": 26, "54472": 27, "54532": 27, "54e": 26, "55": [27, 28], "55000": [27, 28], "553": 26, "554": 26, "555": 26, "5581395348837209": 28, "5584186046511533": 28, "5595": 27, "55e": 26, "56": [26, 27, 28], "5660930232558059": 28, "56897422e": 26, "56e": 26, "57": 27, "570604": 26, "57143": 27, "572": 26, "573": [26, 27], "57918": 27, "57e": 26, "5813953488372093": 28, "58312641e": 26, "58629616e": 26, "59": 27, "59091": 27, "5b": 2, "5e": [26, 27], "5w": 2, "6": [7, 22, 26, 27, 28], "60": [1, 3, 4, 7, 8, 12, 26, 27, 28, 30, 33], "600": 7, "60000": 27, "604": 26, "60794849e": 26, "60887": 27, "60e": 26, "61": [27, 28], "610": 27, "6109": 27, "616000000000e": 26, "618": 27, "618000000000e": 26, "62": [27, 28], "625": 27, "64": [25, 27], "642": 27, "644": 26, "64465": 27, "65": [27, 28], "65000": 27, "651": 26, "655": 26, "65561": 27, "6587301587301587": 28, "65931": 27, "65e": 26, "66": 27, "660": 27, "664": 26, "66500": 26, "6666666666666666": 28, "66667": 27, "67": 27, "6716": 27, "6730769": 27, "673077": 27, "67308": 27, "6760": 27, "67679": 27, "6859903381642513": 27, "68e": 26, "69": [26, 27, 28], "694": 26, "6b": 2, "7": [2, 7, 17, 22, 26, 27, 28, 35], "70": [26, 27, 28], "70000": 27, "700000000000e": 27, "70039": 28, "703": 26, "70775": 27, "708": 26, "70e": 26, "71": [26, 27], "7100": 27, "71322505e": 26, "72": [27, 28], "7232": 26, "73": [26, 27], "730769230769e": 27, "734": 27, "73684": 27, "73913": 27, "74": [26, 27], "74194": 27, "742574": 3, "75": [26, 27], "75000": [27, 28], "752475": 3, "755": 26, "757": 26, "758": 28, "76": [26, 27], "762": 26, "76563": 27, "767": 26, "7692307692307693": 27, "77": [26, 27, 28], "7707": 28, "771": 26, "778e": 26, "77e": 26, "78": [26, 27, 28], "79": [26, 27, 28], "79e": 26, "8": [7, 11, 12, 13, 14, 22, 26, 27, 28], "80": 27, "80000": 27, "81": [26, 28], "81e": 26, "82": [27, 28], "82e": 26, "83": 28, "83e": 26, "84": 27, "84500": 26, "84698": 28, "84e": 26, "85": [27, 28], "850": 26, "85000": 27, "86": 27, "8600000": 27, "860000000000e": 27, "8666666666666667": 27, "87": 27, "87658466": 28, "8765863": 28, "8771": 27, "8785": 27, "88011056e": 26, "88194": 27, "88542": 27, "88617357": 28, "887": [27, 28], "88e": 26, "89": 27, "89873": 27, "9": [7, 17, 26, 27, 28], "90": [26, 28], "90000": 27, "9027": 27, "9084": 27, "90909": 27, "91": [26, 27], "91254856e": 26, "91304": 27, "91623691e": 26, "91667": 28, "91746197e": 26, "91797439e": 26, "91812351e": 26, "91814581e": 26, "91816584e": 26, "91816667e": 26, "91816746e": 26, "918167e": 26, "91818461e": 26, "91835130e": 26, "91859055e": 26, "918750e": 26, "91934019e": 26, "92": 27, "92000": 27, "9200000": 27, "92031912e": 26, "92213777e": 26, "9230769230769231": 27, "928571": 26, "93": [26, 27], "934": 28, "94": [26, 27, 28], "943e": 26, "94967142": 28, "95": [26, 28], "950000000000e": 28, "95833": 27, "95e": 26, "96": 27, "96429": 27, "96476885": 28, "96551428e": 26, "966667e": 27, "968": 26, "970": 27, "9710": 27, "97225075e": 26, "9794520547945206": 27, "97e": 26, "989182": 28, "99": [26, 27, 28], "994": 28, "996": 26, "A": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 30, 31, 33, 34, 35], "As": [12, 27, 28, 31, 35], "But": [27, 28], "By": [23, 26, 27, 31, 33], "For": [21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35], "If": [1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 19, 22, 23, 24, 25, 26, 27, 28, 30, 34], "In": [2, 4, 24, 26, 27, 30, 31, 33, 34, 35], "It": [3, 4, 7, 8, 9, 11, 13, 14, 17, 19, 22, 26, 27, 28, 33, 35], "NOT": 34, "No": 27, "OR": 26, "One": 31, "TO": 25, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35], "There": [17, 24, 25], "These": [5, 6, 8, 9, 26, 31], "To": [25, 28, 30, 33, 35], "With": [0, 28, 30, 31], "__": 27, "______0________": [2, 27, 28], "_______1_______x1": [2, 27, 28], "__________1_____________x1": 2, "___________0_________": 2, "__init__": 30, "_add_fairness_constraint": [3, 30], "_add_one_sided_fairness_constraint": 30, "_arc_constraint": [5, 6, 8], "_b": [5, 6, 8, 9], "_data": 21, "_data_var": 21, "_datapoint": 13, "_define_constraint": [4, 5, 6, 8, 9, 12], "_define_object": [3, 4, 7, 8, 12, 30], "_define_side_constraint": 30, "_define_vari": [4, 5, 6, 8, 9, 12], "_export": 16, "_extract_metadata": 3, "_fairness_bound": [3, 30], "_flow_constraint": [5, 6, 8, 9], "_flow_vari": [5, 6, 8, 9], "_ipw": 7, "_label": 13, "_lambda": [1, 3, 4, 5, 6, 24, 26, 30, 33], "_mpltreeexport": 16, "_obj_mod": [3, 30], "_p": [5, 6, 8, 9], "_p_col_label": 30, "_positive_class": [3, 30], "_protect_feat_col_dtyp": 3, "_protect_feat_col_label": 3, "_solver": [27, 30], "_t": 13, "_treatment": 13, "_tree": 30, "_tree_struc_vari": [5, 6, 8, 9], "_tree_structure_constraint": [5, 6, 8, 9], "_w": [5, 6, 8, 9], "_x": 13, "_x_col_dtyp": 13, "_x_col_label": 13, "_x_p": 30, "_y": 13, "_z": [5, 6, 8, 9], "_zeta": [5, 6, 8, 30], "aa": 26, "aaai": [24, 28, 35], "ab": [27, 30, 33], "abc": 12, "abil": 26, "abl": 31, "about": [0, 16, 24, 30, 34], "abov": [27, 31], "absolut": 30, "abstract": [0, 3, 8, 12, 30], "academ": [25, 26, 27, 28], "acc": [3, 4, 24, 26, 27, 30, 33], "accept": [7, 21, 26], "access": [27, 31], "account": [7, 19, 27, 28, 33], "accuraci": [3, 4, 26, 28, 30, 33], "accuracy_scor": 28, "achiev": [19, 26, 27, 30], "across": [3, 21, 26, 31, 33], "act": 3, "action": 21, "actual": 27, "ad": [3, 7, 21, 25, 28, 31, 32], "add": [3, 4, 19, 21, 26, 27, 28], "add_constr": [21, 30], "add_var": 21, "addit": [0, 7, 21, 25, 30, 31, 34], "addition": 26, "adjust": [7, 11, 13, 16, 26], "admiss": 31, "admit": 31, "advantag": 34, "adversari": [14, 24, 28, 35], "advis": 35, "affect": [0, 26, 27], "after": [27, 30], "ag": [26, 27, 31, 33, 34], "again": 26, "against": [14, 22, 24, 28], "age_0": 26, "age_1": 26, "age_10": 27, "age_2": 26, "age_20": 27, "age_3": 26, "age_30": 27, "age_40": 27, "age_list": 27, "aghaei": [24, 27, 28, 31, 33, 34, 35], "aim": [3, 4, 7, 19, 30], "al": [24, 31, 33, 34, 35], "algorithm": [4, 24, 26, 27, 28, 31, 33], "align": 26, "all": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 22, 24, 26, 27, 28, 30, 31, 33], "allow": [4, 5, 6, 8, 9, 26, 27, 28, 30, 33], "along": [7, 18, 19], "alpha": 12, "alreadi": 22, "also": [2, 3, 4, 23, 26, 27, 28, 33, 34], "altern": 33, "altogeth": 0, "among": [2, 31, 33], "amount": 33, "an": [0, 2, 3, 4, 7, 12, 14, 19, 21, 22, 24, 26, 27, 28, 30, 31, 34, 35], "analyz": 12, "ani": [0, 3, 4, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 27, 33, 34, 35], "annot": [11, 13, 14, 16], "anoth": [0, 23, 26, 27], "api": 24, "appl": [26, 27, 28], "appli": [3, 4, 7, 26, 33, 34], "applic": [3, 24, 26, 31, 33, 34, 35], "approach": [0, 4, 7, 30, 31, 33, 34], "appropri": [26, 31], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35], "arbitrari": [21, 31], "arc": [5, 6, 8, 30], "architectur": 0, "archiv": [2, 27], "arg1": 21, "argument": [7, 16, 21, 26, 30, 33], "arm": [26, 27, 28], "arrai": [2, 3, 4, 7, 14, 17, 21, 22, 27, 28], "arrow": [11, 13, 14, 16], "arrow_annotation_font_scal": [11, 13, 14, 16], "arrow_arg": 16, "arxiv": [24, 27, 30, 31, 33, 34], "aspect": 26, "assert": [11, 14], "assertionerror": [3, 7, 22], "assign": [7, 18, 19, 24, 28, 34], "assignment_dict": 18, "assist": 31, "astyp": 28, "attempt": [3, 30, 33], "attribut": [0, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 26, 27, 31], "attributeerror": 12, "augment": 0, "automat": [3, 4, 11, 13, 14, 16], "avaiabl": [1, 3, 30], "avail": [3, 4, 5, 6, 7, 8, 11, 12, 14, 25, 26, 27, 28, 31, 33], "averag": [27, 28, 33], "avoid": [26, 33], "ax": [11, 12, 13, 14, 16, 26, 27, 28], "ax1": 27, "ax2": 27, "axessubplot": [26, 27], "axi": [11, 12, 13, 14, 16, 26], "b": [2, 10, 12, 17, 18, 19, 21, 22, 26], "b_valu": [11, 13], "bail": 31, "balanc": [2, 3, 4, 24, 26, 30, 33], "balance_scale_data": [2, 27], "barrier": [26, 27], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 22, 24, 26, 28, 31, 33, 34, 35], "baseestim": 17, "bash": 25, "bashrc": 25, "basic": [4, 5, 6, 8], "bbox_arg": 16, "becaus": [26, 33, 34], "becom": 31, "been": [3, 4, 7, 11, 12, 13, 14, 26, 30], "befor": [4, 23, 26, 27], "begun": 31, "behavior": [3, 4, 25], "behind": [5, 6], "being": [2, 12, 18, 26, 27, 31], "below": [25, 30, 34], "bender": [4, 18, 19, 28], "benders_oct_custom": 27, "benders_oct_default": 27, "benders_subproblem": 19, "benderscallback": 19, "bendersoct": [4, 18, 19, 33], "benefit": [28, 31], "benson": [24, 31], "best": [12, 18, 24, 26, 27, 28, 33], "bestbd": [26, 27, 28], "better": [3, 4, 27, 30], "between": [3, 5, 6, 7, 8, 11, 12, 13, 26, 28, 30, 31, 33, 35], "beyond": [24, 28, 35], "bias": [26, 34], "bin": [17, 27, 33], "bin_strategi": 17, "binar": [20, 26, 33, 34], "binari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 18, 19, 22, 24, 26, 27, 28, 30, 31, 33, 34], "binarized_df": 33, "bincount": 27, "binomi": 28, "bioinformat": 33, "bit": 25, "black": 27, "blend": 12, "block": [2, 27], "bodi": 23, "bool": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 22], "boolean": [12, 19, 21], "both": [7, 26, 27, 34, 35], "bound": [3, 12, 16, 19, 21, 27, 28, 30, 31], "box": [11, 13, 14, 16, 23], "branch": [3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 18, 19, 24, 26, 27, 33, 35], "breakdown": 2, "brought": 34, "budget": [14, 28, 35], "build": [0, 25, 26, 27, 28, 35], "built": [23, 27], "c": [10, 17, 21, 22, 27, 28], "c_0": 26, "c_1": 26, "c_2": 26, "c_3": 26, "ca": [27, 28], "calc_metr": [3, 26], "calcul": [3, 4, 26, 30], "calibr": 28, "california": [24, 27, 28], "call": [3, 4, 19, 21, 26, 27, 28, 30, 33, 34], "callback": [20, 21, 26, 27, 28], "callback_act": 21, "callback_help": 20, "can": [2, 3, 4, 7, 8, 9, 13, 16, 17, 21, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35], "cannot": 12, "captur": 26, "care": [26, 34], "carefulli": 26, "case": [26, 27, 28, 33], "cat": 17, "categor": [4, 17, 26, 27, 33, 34], "categori": [27, 31], "categorical_col": [17, 27, 33], "caus": 2, "causal": 7, "cbc": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 21, 26, 30], "cd": 25, "center": [26, 27], "ceq_dict": 3, "certain": [2, 26, 27, 33, 34], "certainti": 28, "chang": [0, 23, 27, 28, 34, 35], "charact": 16, "characterist": [5, 6, 8, 9], "check": [3, 19, 22, 26], "check_binari": 22, "check_columns_match": 22, "check_i": 22, "check_integ": 22, "check_ipw": 22, "check_same_as_x": 22, "check_y_hat": 22, "child": [0, 30], "children": 0, "chmod": 25, "choic": 26, "choos": [26, 31], "chosen": [14, 26], "class": [0, 2, 18, 24, 26, 27, 30, 31, 33, 34], "class_nam": 16, "classif": [0, 1, 3, 4, 5, 6, 11, 14, 24, 28, 29, 32], "classifi": [3, 4, 14, 18, 24, 27, 28, 31, 33], "clear": [11, 12, 13, 14], "clf": [3, 4, 33], "close": [26, 34], "closer": 26, "code": [0, 2, 27, 30], "coeffici": [21, 26, 27, 28], "coin": [25, 26], "coinbrew": 25, "col": 26, "collect": 35, "colleg": 31, "color": [11, 12, 13, 14, 16], "color_dict": [11, 13, 14, 16, 27], "color_lb": 12, "color_opt": 16, "color_ub": 12, "column": [3, 7, 11, 13, 14, 17, 22, 26, 27, 28, 33, 34], "column_nam": 16, "column_names_": 17, "com": 25, "combin": [3, 7, 26, 27, 30, 34], "combo": 30, "command": 25, "commerci": [26, 27, 28], "common": [5, 6, 8, 31], "commun": 26, "compar": [4, 26, 27], "comparison": 28, "compat": 17, "compil": 25, "compl": 26, "complet": [24, 30, 31, 33, 34, 35], "complex": [4, 5, 6, 26, 30], "complic": 30, "comput": [7, 12, 27, 28], "concurr": [26, 27], "condit": [3, 24, 26, 30], "confer": 34, "confound": 7, "cons_expr": 21, "cons_expr_tupl": 21, "consid": [3, 12, 14, 26, 28], "consider": 26, "consist": [17, 21], "consol": 27, "constant": 21, "constrain": [3, 26], "constrained_oct": [0, 3, 10], "constrainedoct": [1, 3, 30], "constraint": [0, 1, 3, 4, 5, 6, 8, 9, 12, 18, 19, 21, 25, 26, 27, 28, 31, 32], "constraint_ad": 30, "constrsgener": [19, 21], "construct": [0, 21, 30], "consult": 24, "contain": [2, 3, 4, 7, 11, 13, 14, 16, 18, 19, 21, 22, 24, 26, 27, 30, 35], "content": 0, "context": [4, 26, 31], "continu": [0, 5, 6, 8, 9, 10, 26, 27, 28, 33], "contrast": 26, "contribut": 24, "control": [4, 5, 6, 26, 31, 33, 35], "converg": 4, "convert": [16, 22], "convict": 31, "copi": [21, 28], "core": [3, 4, 7, 17, 19, 22, 26, 27, 28], "corner": [11, 13, 14, 16], "correct": [7, 23, 25], "correctli": [18, 33], "correspond": [1, 3, 4, 7, 14, 19, 24, 26, 28, 30, 31, 33, 34, 35], "cost": [2, 12, 14, 18, 19, 27, 28, 33, 35], "costli": [27, 33], "could": 3, "count": [26, 27, 28], "count_p": 30, "count_p_prim": 30, "counterfactu": [7, 22, 34], "covari": [2, 7, 33, 34, 35], "cover": [23, 26, 27], "cpe": 3, "cpu": [26, 27, 28], "creat": [0, 4, 7, 21, 26, 27, 28, 30, 33, 34], "credit": 31, "credit_scor": 26, "crimin": 3, "criteria": 3, "critic": 25, "cross": 26, "crucial": [26, 33], "csp": [3, 31], "csp_dict": 3, "csv": 24, "curr_cutoff_path": 18, "curr_feature_path": 18, "curr_nod": 18, "curr_path": 18, "current": [0, 4, 5, 6, 11, 12, 13, 14, 18, 19, 26, 27, 28, 31], "custom": [27, 33], "customiz": 26, "cut": [4, 18, 19, 26, 27, 28], "cutoff": [16, 18, 19, 27, 28], "cutoff_dict": 18, "d": [27, 28], "d3m": 25, "dampen": 34, "data": [2, 3, 4, 7, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 26, 30, 31, 33, 34, 35], "datafram": [2, 3, 4, 7, 13, 17, 18, 19, 22, 26, 27, 28, 34], "datapoint": [4, 5, 6, 7, 8, 9, 13, 18, 19, 34], "dataset": [0, 10, 27, 28, 33, 34], "deal": 27, "debug": [11, 13, 14, 16], "decid": 31, "decim": 16, "decis": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 24, 26, 27, 30, 31, 33], "decisiontre": 21, "declar": 30, "decompos": 4, "decomposit": [4, 28], "decreas": [26, 28], "deem": [26, 33], "deepcopi": 28, "def": [28, 30], "default": [1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 19, 21, 22, 26, 27, 30, 33], "defend": 31, "defin": [3, 4, 5, 6, 7, 8, 9, 28, 30, 34], "definit": 26, "demonstr": [2, 24, 26, 27, 30], "deni": 26, "dens": 26, "depend": [3, 4, 26], "deploy": 35, "depth": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 19, 24, 26, 28, 30, 33, 34], "deriv": [0, 3, 5, 6, 8, 9, 35], "design": 24, "desir": [1, 3, 26, 27, 30, 31], "detail": [0, 30, 35], "detent": 31, "determin": [11, 13, 14, 26], "develop": 24, "df": [17, 22, 26, 27, 33], "df_enc": 27, "diagram": [0, 2, 27, 30], "dict": [3, 5, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21], "dictionari": [3, 5, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21], "differ": [0, 3, 4, 5, 7, 8, 14, 22, 23, 25, 26, 28, 30, 31, 34, 35], "digit": [11, 13, 14], "dimens": 22, "direct": [7, 24, 33], "directli": [3, 4, 5, 6, 7, 8, 9, 12, 27], "disabl": [12, 31], "disadvantag": 26, "discret": [17, 27, 33], "discrimin": [26, 31], "displai": [3, 11, 13, 14, 16, 26], "dist": 25, "distanc": [11, 13, 16, 26, 33], "distribt": 28, "distribut": [3, 14, 24, 27, 28, 33], "dll": 25, "dm": 7, "do": [0, 23, 25, 27, 34], "doc": [23, 24], "document": [2, 30], "doe": [28, 35], "doesn": [3, 4, 7], "domain": [26, 28, 31, 33, 35], "don": [22, 24, 28], "dose": 34, "doubl": 21, "doubli": 7, "download": 25, "dr": 7, "draw": [11, 13, 14], "drop": [26, 27], "drug": 34, "dtype": [3, 27], "dua": [27, 28], "dual": [26, 27], "dud\u00edk": 34, "due": 27, "duplic": [0, 30], "dure": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 26, 27, 33], "dyld_library_path": 25, "dylib": 25, "e": [0, 1, 3, 5, 6, 8, 9, 21, 26, 27, 28, 31, 33, 34, 35], "each": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 21, 24, 26, 27, 28, 31, 33, 34, 35], "easi": [0, 27], "easier": 26, "easiest": 23, "edg": [11, 13, 14, 16, 19], "edge_annot": [11, 13, 14, 16], "editor": 23, "edu": [2, 27], "edu_0": 26, "edu_1": 26, "edu_2": 26, "edu_3": 26, "education_level": 26, "effect": [7, 26, 27], "effici": 33, "egg": 25, "either": [3, 7, 8, 9, 11, 13, 22, 28, 33, 34], "elaps": 33, "element": [19, 21, 33], "els": 28, "eman": 24, "emp_0": 26, "emp_1": 26, "emp_2": 26, "emp_3": 26, "emphas": 0, "emploi": 34, "employment_statu": 26, "empti": 19, "enabl": [12, 33], "encod": [4, 17, 26, 27, 33, 34], "encoders_": 17, "encount": 19, "encourag": [0, 26], "enforc": [3, 26, 30, 31], "engag": 26, "enough": 27, "ensur": [0, 4, 5, 6, 8, 9, 19, 23, 25, 26, 27], "entir": 34, "entiti": 18, "entri": 35, "environ": [25, 35], "eodd": [3, 31], "eopp": [3, 31], "epsilon": 28, "eq_dict": 3, "equal": [3, 4, 12, 24, 26, 27, 30], "equat": 26, "equiti": [3, 30], "equival": 31, "error": [3, 22, 27, 34], "especi": 4, "essenti": 26, "estim": [7, 12, 34, 35], "et": [24, 31, 33, 34, 35], "etc": [1, 3, 11, 13, 14, 27], "ethnic": 31, "evalu": [26, 34], "even": [0, 26, 33], "everi": [11, 13, 14, 19], "everyon": [23, 34], "exampl": [0, 2, 3, 4, 7, 17, 22, 23, 26, 30, 31, 33, 35], "example_2_data": 2, "exce": 30, "exchang": 35, "exclus": 35, "execut": 34, "exist": [17, 33], "expect": [3, 7, 23, 25, 26, 28, 35], "experienc": 31, "expert": 26, "expir": [26, 27, 28], "expl": [26, 27, 28], "explain": 25, "explor": [26, 27, 28], "export": [16, 25], "expr": [18, 21], "express": [18, 21], "extend": [0, 3, 4, 5, 6, 7, 8, 9, 11, 13], "extens": [24, 31], "extract": 3, "extrem": 14, "f": [3, 26, 27, 28, 35], "f_theta_indic": 18, "face": [0, 4, 7], "factor": [2, 3, 7, 26], "fail": 24, "fair": [1, 3, 24, 29, 30, 32], "fair_oct": [0, 10, 26], "fairconstrain": 30, "fairconstrainedoct": [3, 30], "fairconstrainedonesidedoct": 30, "fairconstrainedonesideoct": 30, "faircspoct": [3, 26, 30], "faireoddsoct": [3, 26, 30], "faireoppoct": [3, 26], "fairness_bound": [3, 26, 30, 31], "fairness_exampl": 2, "fairness_metric_summari": 3, "fairness_typ": [3, 31], "fairoct": [2, 3, 26, 30], "faironesidespoct": 30, "fairpeoct": [3, 26, 30], "fairspoct": [3, 30], "fairtre": [24, 31], "fairtreeclassifi": 31, "fals": [3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 21, 22, 26, 27, 28, 30, 31], "famili": 34, "far": 33, "faster": [4, 33], "favor": 27, "fcl_less_strict": 26, "fcl_progress_exampl": 26, "fcl_strict": 26, "feasibl": 30, "feat0": 28, "feat1": 28, "feat2": 28, "feat3": 28, "feat4": 28, "feat5": 28, "feat_binar": 26, "featur": [0, 2, 3, 4, 7, 11, 13, 14, 16, 17, 18, 19, 24, 26, 27, 28, 30, 31, 35], "feature_nam": [11, 13, 14, 26], "feature_path_dict": 18, "femal": [3, 26], "fetch": [25, 28], "few": 24, "fig": [26, 27, 28], "figsiz": [26, 27, 28], "figur": [0, 11, 13, 14, 30, 33], "file": 25, "fill": [11, 13, 14, 16], "final": 0, "find": [18, 19, 23, 27, 33], "fine": 33, "fingerprint": [26, 27, 28], "first": [2, 11, 13, 14, 25, 27, 28, 30, 33, 34], "fit": [0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 17, 24, 26, 27, 28, 30, 33, 34, 35], "fit_transform": [17, 26, 27], "fix": [4, 23], "flag": [14, 18], "flexibl": 33, "flip": 2, "float": [1, 3, 4, 5, 6, 7, 11, 12, 13, 14, 16, 19, 21, 28, 30], "float32": 28, "flow": [2, 4, 5, 6, 8, 9, 26, 27, 30], "flow_oct": [0, 10, 27], "flow_oct_custom": 27, "flow_oct_default": 27, "flow_oct_exampl": [2, 27], "flow_oct_m": [0, 1, 3, 10], "flow_oct_ss": [0, 4, 10], "flow_opt": [0, 10], "flow_opt_m": [0, 7, 10], "flow_opt_ss": [0, 7, 10], "flowoct": [4, 5, 6, 24, 29, 33], "flowoctmultiplesink": [1, 3, 5, 30], "flowoctsinglesink": [4, 6], "flowopt_": 34, "flowopt_dm": [7, 8, 34], "flowopt_dr": [7, 8, 34], "flowopt_ipw": [7, 9, 34], "flowoptmultiplesink": [7, 8], "flowoptsinglesink": [7, 9], "focu": [26, 33], "focus": [4, 26], "follow": [0, 2, 3, 4, 7, 12, 14, 17, 19, 24, 25, 26, 27, 28, 31, 33], "font": [11, 12, 13, 14, 16], "fontsiz": [11, 13, 14, 16, 27], "foral": 26, "form": [2, 21, 24], "format": [14, 16, 24, 27], "formul": [0, 4, 5, 6, 8, 9, 11, 12, 13, 25, 28, 30, 33], "formula": 30, "found": [1, 3, 7, 12, 14, 19, 22, 25, 26, 27, 28, 30, 35], "foundat": 25, "four": 30, "frame": [3, 4, 7, 17, 19, 22, 33], "framework": 3, "free": 25, "frequenc": 31, "friendli": 7, "from": [0, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 17, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35], "full": [33, 35], "fulli": 27, "function": [0, 3, 4, 5, 6, 7, 8, 12, 21, 26, 28, 30, 33, 35], "further": 30, "futur": 30, "g": [0, 1, 3, 19, 22, 26, 31, 33], "g_label": 22, "gap": [12, 26, 27, 28, 33], "gender": [3, 26, 31], "gender_test": 26, "gender_train": 26, "gener": [3, 4, 16, 19, 21, 25, 26, 27, 28, 30, 35], "generate_constr": 19, "geometr": 28, "get": [18, 19, 21, 25, 27, 28, 31], "get_all_terminal_path": 18, "get_condeqodd": 3, "get_csp": 3, "get_cut_express": 18, "get_cut_integ": 18, "get_eqodd": 3, "get_fill_color": 16, "get_left_exp_integ": 18, "get_nominal_path": 18, "get_right_exp_integ": 18, "get_sp": 3, "get_target_exp_integ": 18, "get_var_valu": 21, "git": [23, 25], "github": [23, 25], "githubusercont": 25, "give": [31, 33], "given": [1, 3, 4, 7, 8, 11, 12, 13, 14, 16, 18, 19, 26, 28, 30, 33, 34], "go": 24, "goal": [24, 26, 30], "gomez": 24, "gomori": [26, 27, 28], "gone": 31, "good": 34, "govern": [23, 31], "gradual": 26, "graff": [27, 28], "grain": 33, "granular": 33, "grb": 21, "grb_cbc_const_map": 21, "greater": 27, "grid": 12, "group": [3, 25, 26, 30, 31, 34], "gt": [26, 27], "guarante": 3, "guess": 28, "guid": [0, 24, 31], "gurobi": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 21, 26, 27, 28, 30], "g\u00f3mez": [24, 27, 28, 31, 33, 34, 35], "h": [26, 27, 28], "h17827": 27, "h31789": 27, "h35037": 27, "h36500": 27, "ha": [2, 3, 4, 7, 11, 12, 13, 14, 22, 23, 26, 27, 30, 33, 34], "half": 26, "hand": [18, 26, 34], "handl": 8, "happen": 34, "hardwar": 25, "hat": 26, "have": [0, 2, 3, 4, 7, 14, 17, 19, 24, 25, 26, 27, 28, 30, 31, 34], "hbasa9ysa3": [28, 35], "heavili": 27, "help": [23, 24, 26, 31, 33, 35], "helper": 21, "helvetica": [11, 13, 14], "here": [2, 23, 24, 25, 26, 28, 33], "heurist": [26, 27, 33], "high": [27, 31, 33], "higher": [26, 27, 33], "highli": 25, "hire": 31, "hispan": 27, "histor": 34, "hold": 3, "homeless": 31, "hot": [4, 17, 27, 33, 34], "hous": 31, "how": [0, 24, 25, 26, 27, 28, 30, 31, 33, 35], "howev": [3, 25, 26, 27, 30, 33, 34], "http": [2, 25, 27, 28, 30, 31, 33, 34, 35], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35], "ic": [2, 27], "icml": 34, "id": [28, 35], "idea": [5, 6, 8, 9], "ident": 17, "identifi": 22, "ignor": [3, 4, 17], "imag": 34, "imbalanc": [2, 27, 33], "impact": 26, "implement": [0, 3, 4, 7, 8, 9, 12, 24, 26, 31, 33, 34], "import": [3, 4, 7, 17, 22, 24, 26, 27, 28, 33], "impos": [3, 31], "improv": [12, 33], "impur": [11, 13, 14], "includ": [3, 4, 5, 6, 8, 9, 11, 13, 14, 24, 26, 27, 30, 31], "inclus": 35, "incom": [6, 26, 27], "income_0": [26, 27], "income_1": [26, 27], "income_2": [26, 27], "income_3": [26, 27], "income_4": 27, "income_list": 27, "inconsist": [3, 4, 7, 14, 22], "incorpor": [1, 4, 24, 31], "increas": [26, 27, 28, 30, 31, 33], "incumb": [26, 27, 28], "inde": 31, "independ": 31, "index": [11, 13, 14, 18, 19, 22, 27, 30], "indic": [11, 13, 14, 19, 21, 26, 33], "individu": [7, 31, 34], "inf": [21, 26], "infinit": 28, "influenc": [26, 27], "info": 23, "inform": [0, 2, 11, 13, 14, 16, 24, 26, 27, 28, 30], "inher": 33, "inherit": [0, 4, 7, 8, 9, 30], "init": 21, "initi": [3, 4, 18, 19, 21, 27, 30], "initial_max": [18, 19], "initial_min": [18, 19], "initial_xi": [18, 19], "input": [3, 4, 7, 8, 13, 14, 17, 18, 19, 21, 22, 27, 28, 31, 33, 34], "instal": 24, "instanc": [2, 4, 7, 26, 33], "instanti": [3, 4, 5, 6, 8, 9, 12], "instead": [3, 5, 6, 8, 9, 11, 13, 14, 30], "int": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 30], "int64": 19, "integ": [0, 3, 4, 7, 9, 10, 11, 12, 13, 14, 17, 19, 21, 22, 24, 26, 27, 28, 35], "integer_col": [17, 27, 33], "integr": 27, "intel": 25, "interact": 21, "interest": [0, 19, 24, 30], "interfac": [0, 7, 26], "intern": [11, 13, 14, 34], "interpret": [24, 33], "interrupt": [26, 27], "interv": [3, 30], "interview": 31, "intfeastol": [26, 27, 28], "intinf": [26, 27, 28], "introduc": [26, 31], "intuit": 27, "invers": [7, 22], "investig": [26, 27], "invit": 31, "involv": [24, 33], "ipw": [7, 22], "ipw_train": 7, "irvin": [27, 28], "issu": [3, 4, 23, 24], "item": 26, "iter": [4, 26, 27, 28], "its": [5, 6, 11, 13, 14, 19, 22, 24, 33, 34], "j": [24, 31], "jo": [24, 31, 34], "job": 31, "john": 34, "just": 27, "justifi": [26, 27, 31], "justin": [24, 28, 35], "keep": 0, "kei": [3, 5, 6, 8, 9, 21, 26], "keyerror": 22, "know": 24, "knowledg": [26, 28, 35], "known": [28, 31, 34], "kwarg": [8, 11, 13, 19, 21], "l": [3, 26, 28, 31], "label": [1, 2, 3, 4, 5, 11, 12, 13, 14, 16, 18, 19, 22, 24, 26, 27, 28, 30, 31], "lambda": [28, 33], "langford": 34, "larg": [4, 30], "larger": [4, 23, 26, 33], "last": 25, "lazi": [19, 25, 27, 28], "lazyconstraint": [27, 28], "lb": 21, "lead": [26, 30], "leaf": [0, 3, 4, 6, 7, 9, 11, 13, 14, 16, 24, 27, 28, 33], "learn": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 24, 27, 28, 30, 31, 33, 34, 35], "leav": [5, 8, 11, 13, 14, 16, 27, 30], "left": [18, 19, 24], "legal": 26, "legend": 12, "legend_fonts": 12, "legend_loc": 12, "legit_fact": 3, "legit_factor": [2, 3, 26], "legit_factor_train": 3, "legitim": [2, 3, 26, 31], "len": [28, 33], "length": 22, "leq": 33, "less": 34, "let": [26, 27], "level": [2, 3, 11, 13, 26, 28, 33, 34], "leverag": [30, 33], "lh": 18, "li": 34, "lib": 25, "libcbc": 25, "libcbcsolv": 25, "librari": 25, "licens": [26, 27, 28], "lihong": 34, "like": [3, 4, 7, 14, 17, 21, 22, 23, 26, 27, 30, 31, 34], "limit": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 26, 30, 31, 33], "lin_expr": 21, "line": [12, 25, 31], "linear": 21, "linexpr": [18, 21], "link": [4, 24], "linux": 25, "list": [3, 11, 13, 14, 16, 17, 18, 19, 21, 22, 24, 27], "literatur": [0, 31], "ll": [27, 28], "loan_approv": 26, "loc": 28, "local": 23, "locat": 12, "log": [12, 14, 26, 27, 28], "log_scal": [12, 26], "logic": [26, 27, 28], "look": [24, 26], "loop": 30, "lower": [12, 21, 26, 33, 34], "lp": [26, 27], "lt": [26, 27], "lw": 12, "m": 27, "m1": [26, 27, 28], "mac64": [26, 27, 28], "machin": [24, 26, 27, 28, 31, 33, 34, 35], "maco": 25, "made": 3, "mai": [3, 26, 27, 31, 33, 35], "main": [4, 18, 19, 26, 33, 34], "main_grb_obj": 18, "main_model_obj": 19, "maintain": [0, 33], "major": [11, 13, 14, 27, 33], "make": [3, 4, 7, 8, 9, 11, 12, 13, 14, 23, 26, 27, 28, 30, 31], "make_classif": 26, "maker": 31, "male": [3, 26], "manag": [25, 33], "mani": [25, 26, 33, 34, 35], "manner": [11, 13, 14, 23], "map": [19, 26], "marit": 31, "markdown": 23, "master": [4, 18, 19, 25], "match": [3, 4, 22, 31, 35], "math": 28, "mathemat": [33, 35], "matplotlib": [11, 12, 13, 14, 16, 26, 27, 28], "matrix": [12, 26, 27, 28, 33, 35], "matter": 31, "max": [0, 10], "max_depth": 16, "max_i": 16, "max_x": 16, "maxim": [0, 3, 4, 7, 10, 21, 24, 27, 28, 30, 33, 34], "maximum": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 19, 26, 28], "mb": 26, "mean": [19, 26, 27], "meant": 0, "measur": [3, 28], "mechan": 35, "medicin": 33, "membership": 31, "memori": 26, "mention": 31, "meritori": 31, "messag": 22, "metadata": 3, "method": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 24, 25, 26, 27, 28, 30, 33, 35], "metric": [3, 28, 30], "might": [26, 27], "mimic": 21, "min": [0, 10, 28], "mind": 0, "minim": [0, 10, 19, 21], "minimum": [18, 19], "minor": [2, 27, 33], "minority_class": 33, "mio": [0, 1, 3, 4, 24, 25, 30, 33, 34, 35], "mip": [1, 3, 4, 5, 6, 9, 11, 12, 13, 14, 18, 19, 21, 25, 30], "mir": [26, 27, 28], "miroslav": 34, "mirror": 30, "misclassif": 33, "misclassifi": [2, 27, 28, 33], "mistak": 26, "mix": [3, 4, 9, 11, 12, 13, 14, 24, 33, 34], "mkdir": 25, "ml": [2, 27], "mode": [3, 4, 27], "model": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 24, 26, 27, 28, 33, 34, 35], "model_nam": 16, "model_select": [24, 26, 27, 28], "modif": 30, "modifi": [21, 30], "modul": 0, "monitor": 26, "monk": [2, 28], "more": [0, 3, 7, 26, 27, 28, 30, 31, 33], "most": [26, 31, 33, 34, 35], "motiv": 0, "mplplotter": [14, 16], "much": [26, 33, 35], "multi": 14, "multipl": [4, 5, 8, 23, 27, 33], "must": [3, 4, 12, 25, 26, 27, 28, 31, 35], "n": [18, 24, 26, 28, 30, 31, 34, 35], "n_bin": [17, 27, 33], "n_class": 26, "n_featur": [3, 4, 7, 14, 17, 21, 22, 26], "n_inform": 26, "n_p": 3, "n_protected_featur": 3, "n_redund": 26, "n_sampl": [3, 4, 7, 14, 17, 21, 22, 26], "n_treatment": [7, 22], "na": 17, "name": [0, 1, 3, 10, 11, 12, 13, 14, 16, 17, 21, 22, 25, 26, 30], "nation": 31, "natur": [27, 31, 33], "ndarrai": [3, 4, 7, 11, 13, 14, 22], "necessari": [0, 27, 33], "need": [2, 23, 25, 27, 28, 30, 31, 34, 35], "neg": 3, "net": [28, 35], "new": [0, 3, 4, 7, 14, 21, 22, 24, 25, 27, 30, 33, 34], "new_data": [3, 22, 27, 28], "new_data_enc": 27, "next": [0, 26, 30], "nextaft": 28, "nh": 25, "node": [0, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 24, 26, 27, 28, 30, 33], "node_dict": 16, "node_id": 16, "node_to_str": 16, "nodelimit": [26, 27, 28], "nomin": 18, "non": [3, 4, 7, 12, 14, 22, 26, 27, 28], "non_robust_acc": 28, "non_robust_classifi": 28, "non_robust_pr": 28, "none": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24, 26, 27, 28, 30], "nonzero": [26, 27, 28], "norm": 26, "normal": 28, "note": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 22, 26, 27, 28], "notebook": [0, 2, 24, 26, 30, 31], "notfittederror": [3, 4, 7, 11, 12, 13, 14], "notic": 26, "notion": [24, 30, 31], "novel": 33, "now": [26, 27, 28, 30], "np": [3, 4, 7, 22, 24, 26, 27, 28, 33], "npass": 19, "num_child": [27, 33], "num_child_1": 27, "num_child_2": 27, "num_child_3": 27, "num_child_4": 27, "num_constraint": 12, "num_decision_var": 12, "num_integer_var": 12, "num_non_zero": 12, "num_solut": [12, 26, 27], "num_thread": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 26, 27, 28, 30], "number": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 22, 26, 27, 30, 33], "number_of_child_list": 27, "number_of_default": 26, "numer": [0, 3], "numpi": [2, 3, 4, 7, 11, 13, 19, 22, 24, 26, 27, 28], "nz": 26, "obj": [19, 21, 26, 27, 28], "obj_mod": [3, 4, 24, 26, 27, 30, 33], "object": [0, 3, 4, 5, 6, 7, 8, 9, 12, 14, 16, 17, 18, 19, 21, 24, 26, 28, 30], "objective_bound": 12, "objective_valu": 12, "observ": [2, 7, 24, 25, 26, 27, 34], "obtain": [3, 7, 28, 33], "occur": 33, "oct": [2, 30], "octexampl": 2, "odd": [3, 24, 26, 30], "oddt": 3, "odtl": [0, 10], "odtlearn": [26, 27, 28, 30, 33, 34], "off": [26, 28], "offer": [33, 34], "often": 34, "omit": 30, "onc": [26, 33], "one": [0, 3, 4, 5, 6, 8, 9, 17, 23, 26, 27, 30, 31, 33, 34], "ones": 33, "ones_lik": 27, "ongo": 26, "onli": [3, 4, 5, 6, 11, 12, 13, 14, 17, 26, 27, 28, 33, 34], "onlin": 23, "op": 26, "opaqu": 12, "open": 26, "openreview": [28, 35], "opportun": [3, 24, 26], "opt": 7, "opt_ct": [0, 5, 6, 10, 14], "opt_dt": [0, 10, 11, 13], "opt_pt": [0, 8, 9, 10], "opt_tre": 7, "optim": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 21, 24, 27, 28, 29, 32], "optim_gap": [12, 26, 27], "optimalclassificationtre": [0, 5, 6, 11, 14], "optimaldecisiontre": [0, 11, 12, 13], "optimalprescriptivetre": [0, 7, 8, 9, 13], "option": [1, 3, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 25, 30, 33], "order": [11, 13, 14, 26, 27, 34], "ordin": 33, "org": [27, 30, 31, 33, 34], "orient": [30, 31], "origin": [22, 27, 31, 33, 34], "original_col": 22, "original_column": 22, "other": [0, 2, 22, 24, 26, 27, 28, 30, 31, 33], "otherwis": 22, "our": [0, 2, 3, 24, 25, 26, 27, 28, 30, 33], "out": [4, 24, 27], "outcom": [1, 3, 7, 24, 26, 30, 31, 34], "output": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 26, 33, 34], "outsid": 7, "over": [12, 26, 27, 28, 33, 35], "overal": [26, 27], "overfit": [26, 33], "overrid": 7, "overview": [24, 26], "own": [4, 26], "p": [3, 19, 24, 26, 27, 28, 30, 31, 33, 34, 35], "p_df": [3, 30], "p_prime": 30, "p_prime_df": [3, 30], "p_valu": [11, 13], "packag": [0, 21, 24, 25, 26, 30, 34], "page": 23, "pai": 28, "paint": [11, 13, 14], "pair": 18, "palett": 14, "panda": [3, 4, 7, 13, 17, 19, 22, 24, 26, 27, 28], "paper": [30, 31, 33, 34, 35], "paradigm": [17, 27], "paramet": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 26, 27, 28, 30, 31, 33, 34, 35], "parent": 1, "pariti": [3, 24, 30], "part": [19, 27], "particip": 23, "particular": [24, 30, 34], "particularli": 33, "partit": 34, "pass": [4, 19, 21, 24, 26], "past": 34, "path": [18, 19, 24, 25], "path_dict": 18, "patient": 34, "pd": [17, 22, 24, 26, 27, 28], "pdf": [28, 31, 34, 35], "pe": [3, 31], "penal": 33, "peopl": [24, 31, 34], "per": 26, "perform": [22, 24, 26, 27, 28, 33, 35], "perpetu": 26, "persist": 25, "person": [31, 34], "perturb": [14, 18, 19, 28], "phase": 35, "phenotyp": 34, "physic": [26, 27, 28], "pip": 25, "pipelin": [17, 27], "pipenv": 25, "place": 16, "plane": [26, 27, 28], "platform_specific_shared_lib": 25, "pleas": [23, 24, 30], "plot": [7, 11, 12, 13, 14, 16, 26, 27], "plot_search_progress": [12, 26, 27], "plot_tre": [7, 9, 11, 13, 14, 26, 27, 28], "plt": [26, 27, 28], "plu": 7, "pmip_cbc_librari": 25, "point": [2, 11, 13, 14, 17, 19, 24, 28, 31, 33], "polic": 31, "polici": 34, "poorli": [33, 35], "pop": [24, 27], "popul": 33, "popular": 33, "posit": [2, 3, 26, 31], "positive_class": [1, 3, 26, 30], "possibl": [27, 30, 33], "post": 23, "potenti": [7, 14, 22, 26, 27, 28, 33], "practic": 28, "practition": 0, "precis": [11, 13, 14, 16], "predict": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 22, 24, 26, 27, 28, 30, 33, 34], "prep": 21, "prep_indic": 21, "preprint": [24, 27, 31, 33, 34], "preprocess": [4, 27, 33, 34], "prescript": [0, 2, 7, 8, 9, 11, 13, 24, 32], "prescriptive_ex_data": 2, "prescriptivetre": 24, "presenc": 35, "present": 22, "preserv": 3, "presolv": [26, 27, 28], "pretend": 26, "prev_default_test": 26, "prev_default_train": 26, "prevent": [0, 26, 33], "previou": [11, 12, 13, 14, 26], "previous_default": 26, "primal": [26, 27], "print": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 22, 24, 26, 27, 28], "print_tre": [7, 9, 11, 13, 14, 24, 27, 28], "prior": [3, 12], "privat": 21, "pro": [26, 27, 28], "prob": 35, "probabilities_to_cost": 35, "probabl": [7, 22, 26, 28, 31, 34, 35], "problem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 18, 19, 21, 24, 26, 28, 30, 31, 33], "proce": 19, "proceed": 34, "process": [3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 18, 19, 26, 27, 30, 31, 33], "processor": [26, 27, 28], "produc": [4, 14, 28], "product": 7, "program": [9, 11, 12, 13], "progress": [12, 26, 27], "progresslog": 12, "project": 23, "prompt": 25, "proof": [26, 33], "propens": 7, "proper": [4, 5, 6, 8, 9], "properli": 25, "properti": [3, 12, 26, 27], "proport": 26, "propos": [0, 34], "protect": [2, 3, 26, 30, 31], "protect_feat": [2, 3, 26], "protect_feat_train": 3, "protected_featur": 30, "provabl": 4, "provid": [0, 3, 4, 5, 6, 7, 8, 24, 25, 26, 27, 30, 31, 33, 34], "proxi": 28, "prune": [11, 13, 27, 28], "public": 31, "pull": 23, "puriti": 14, "purpos": 26, "pyplot": [26, 27, 28], "python": [7, 12, 21, 24], "q_f": 28, "qualifi": 31, "qualiti": 33, "quantil": 17, "quicksum": [21, 30], "r": 12, "race": [2, 3, 27, 31, 33], "race_black": 27, "race_hispan": 27, "race_list": 27, "race_whit": 27, "rais": [3, 4, 7, 11, 12, 13, 14, 22, 27], "randint": 27, "random": [26, 27, 28, 34], "random_st": [24, 26, 27, 28], "randomli": 28, "rang": [3, 7, 22, 26, 27, 28, 33, 35], "rare": 35, "rate": [3, 26, 31, 33], "rather": 30, "raw": 25, "reach": [3, 4, 5, 6, 7, 8, 9, 14, 21, 24], "react": 34, "read": [23, 24, 25, 26, 27], "read_csv": 24, "reader": 30, "readi": 27, "real": [17, 26, 27, 33], "real_col": [17, 26, 27, 33], "reason": 35, "receiv": [7, 26, 31, 34], "recent": [0, 31], "recidiv": 31, "recommend": [7, 8, 9, 13, 23, 25, 26, 33], "record": [12, 28], "recurs": 16, "refer": 22, "refit": 27, "reformul": 0, "regard": 31, "regress": 14, "regular": [3, 4, 5, 6, 26, 27, 28, 30], "relat": [5, 6, 8, 9, 26], "relax": [26, 27, 28], "releas": 31, "relev": 24, "reli": 34, "reliabl": 34, "religion": 31, "remain": 30, "remov": [26, 27, 28], "report": 33, "repositori": [2, 27, 28], "repres": [5, 6, 7, 8, 9, 11, 13, 14, 18, 19, 24, 26, 27, 35], "represent": [11, 13, 14, 16], "reproduc": 23, "request": [23, 31], "requir": [3, 26, 27, 30, 31, 33, 34], "research": [0, 24, 25], "reshap": 26, "residu": 26, "resolv": 23, "resourc": 31, "resp": 24, "respect": [24, 25], "respons": 2, "result": [3, 4, 7, 14, 22, 26, 27, 28, 31, 33, 34, 35], "return": [2, 3, 4, 7, 11, 13, 14, 16, 17, 18, 19, 21, 22, 28, 30, 33], "revenu": 33, "review": 24, "reweight": 34, "rh": [26, 27, 28], "right": [18, 19, 24], "risk": 31, "rlt": 27, "robust": [7, 14, 19, 24, 28, 32], "robust_acc": 28, "robust_classifi": 28, "robust_exampl": [2, 28], "robust_oct": [0, 10, 28], "robust_pr": 28, "robust_tree_subproblem": 19, "robustbenderscallback": 19, "robustness_exampl": 2, "robustoct": [14, 18, 29], "robusttre": [2, 24], "robusttreeclassifi": 35, "roman": [11, 13, 14], "root": [11, 13, 14, 16, 19, 24, 26, 27, 28, 33], "roughli": 26, "round": [11, 13, 14, 16], "routin": [24, 33], "row": [7, 26, 27, 28], "rrggbb": 14, "rule": 24, "run": [24, 25, 27], "sacrif": 27, "safest": 34, "sai": [28, 33], "sake": 28, "same": [3, 4, 11, 13, 14, 17, 22, 27, 28, 31, 33, 35], "sampl": [3, 4, 7, 8, 14, 17, 21, 22, 24, 27, 28, 30, 33, 35], "satisfi": [3, 19, 26, 31], "saw": 27, "scale": [2, 4, 11, 12, 13, 14, 16, 27, 28], "scale_enc": 24, "scarc": 31, "scenario": [7, 26, 27, 28, 33], "schema": 28, "scheme": [17, 27], "school": [27, 28], "scienc": [27, 28], "scikit": [17, 27], "score": [7, 31, 34], "screen": 31, "script": 24, "search": [12, 26, 27], "search_progress_log": 12, "sec": [26, 27, 28], "second": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 26, 27, 28, 30, 33], "section": [24, 26, 27, 31], "see": [2, 27, 28, 30, 31, 33, 35], "seed": [27, 28], "seem": 25, "seen": [26, 27], "select": [3, 4, 24, 26], "selected_featur": 16, "self": [3, 4, 7, 14, 17, 30], "sens": 21, "sensit": 31, "sentenc": 23, "separ": 0, "seri": [3, 4, 7, 13, 22], "servic": 31, "set": [2, 3, 4, 7, 11, 12, 13, 14, 21, 26, 27, 28, 30, 31, 33, 35], "set_object": 21, "set_titl": 27, "sever": [24, 26], "sex": [27, 33], "sex_list": 27, "sex_m": 27, "sexual": 31, "shape": [3, 4, 7, 14, 17, 21, 22, 24, 27, 28, 30, 35], "share": 25, "shift": [14, 24], "shorter": 26, "shortest": [18, 19], "shortest_path_solv": 18, "should": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 21, 26, 28, 30, 31, 33, 34], "show": [0, 2, 3, 11, 12, 13, 14, 26, 27, 28, 30, 33, 34], "showcas": 31, "shown": 30, "side": [1, 3, 18, 32], "sign": 28, "significantli": 33, "similar": [26, 27, 30, 31, 34], "simpl": [26, 27], "simpler": 26, "simplex": [26, 27, 28], "simplic": 28, "simplifi": 30, "simul": [2, 26, 28], "sinc": [28, 34], "singl": [4, 6, 9, 27], "sink": [4, 5, 6, 8, 9, 19], "size": [11, 12, 13, 14, 16, 26, 27, 28], "sklearn": [14, 16, 17, 24, 26, 27, 28], "slight": 34, "slightli": [21, 26], "small": [23, 26, 27, 28, 33], "smaller": [3, 4, 26, 30, 33, 34], "snap": 28, "so": [25, 34], "social": 31, "societ": 26, "softwar": [0, 25], "sole": 26, "solut": [0, 4, 12, 19, 21, 26, 27, 28, 33], "solutionlimit": [26, 27, 28], "solv": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 21, 24, 26, 27, 28, 30, 33, 35], "solver": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 18, 19, 20, 26, 27, 28, 30, 33], "solver_nam": [12, 21], "solvercbc": 21, "some": [25, 28, 31, 35], "someon": 31, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26], "southern": 24, "sp": [3, 30, 31], "sp_dict": 3, "sp_metric": 26, "sparser": [27, 33], "special": 16, "specif": [0, 3, 4, 5, 6, 7, 8, 9, 19, 24, 26, 31, 33], "specifi": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 21, 26, 27, 30, 31, 33], "spend": 33, "sphinx": 23, "split": [26, 28, 33], "stabl": 25, "stackoverflow": 23, "stake": 31, "stakehold": 26, "standard": [0, 4, 31], "start": [25, 26], "statist": [3, 24, 27, 28, 30], "statu": 31, "stcl": [24, 27], "stcl_acc": 27, "stcl_balanc": 27, "stcl_progress_log": 27, "step": [3, 25, 33, 34], "still": 30, "store": [3, 4, 7, 12, 14, 18, 21, 26, 27], "store_data": 21, "store_search_progress_log": [12, 26, 27], "str": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 21, 22, 30], "str_": 19, "strategi": [0, 17], "strict": 31, "stricter": [3, 30], "strictli": 31, "string": [1, 3, 14, 16, 21, 30], "strong": [24, 27, 28, 33], "strongli": 25, "strongtre": [24, 33], "structur": [0, 3, 4, 5, 6, 8, 9, 11, 13, 14, 21, 22, 26, 27, 30], "studi": 27, "style": 16, "sub": 19, "subclass": [3, 8, 12], "submit": 23, "submodul": 0, "subpackag": 0, "subplot": [26, 27, 28], "subpopul": 34, "subproblem": [4, 18, 19], "suffici": 34, "suggest": 25, "suicid": 33, "suitabl": 26, "sum": [7, 21, 24, 27, 28], "summar": 3, "summari": 3, "super": 30, "suppli": 21, "support": [0, 3, 4, 5, 6, 11, 12, 28], "sure": 23, "switch": 28, "symmetr": 28, "synthet": 26, "system": 31, "t": [3, 4, 7, 8, 13, 19, 22, 24, 28], "t_pred": [3, 7], "t_train": 7, "tailor": 28, "take": [4, 19, 21, 24, 26, 28, 30, 34], "target": [3, 4, 13, 14, 16, 18, 19, 22, 24, 26, 27], "techniqu": [4, 34], "technologi": 24, "term": [4, 7, 21, 27, 33], "termin": [18, 19, 25], "terminal_assignments_dict": [18, 19], "terminal_cutoffs_dict": [18, 19], "terminal_features_dict": [18, 19], "terminal_nod": [18, 19], "terminal_path_dict": [18, 19], "test": [2, 11, 13, 14, 22, 24, 26, 28, 35], "test_acc": 26, "test_pr": [24, 27], "test_siz": [24, 26, 27, 28], "text": [11, 13, 14], "than": [3, 4, 7, 14, 22, 26, 27, 30, 33, 34], "thei": [0, 26, 27, 30, 31], "them": [2, 4, 31], "thi": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35], "think": 28, "third": 2, "those": [4, 27], "thread": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 26, 27, 28, 30], "three": [2, 4, 33, 34], "threshold": [11, 13, 14, 18, 35], "through": [5, 6, 8, 9, 19, 21, 24, 25, 27, 28, 30, 33, 35], "thu": [24, 25, 28, 33], "tight_layout": 27, "time": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 23, 26, 27, 28, 30, 33, 35], "time_limit": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 24, 26, 27, 28, 30, 33], "timelimit": [26, 27, 28], "titl": [12, 26, 27], "toi": [24, 26, 27], "toler": [26, 27, 28], "top": [11, 13, 14, 21, 30], "touch": 23, "trade": 26, "tradit": 33, "train": [2, 3, 4, 7, 11, 12, 13, 14, 26, 27, 28, 33, 35], "train_test_split": [24, 26, 27, 28], "transform": [17, 26, 27], "transformermixin": 17, "transpar": 12, "travers": [0, 3, 4, 7, 14, 18], "treat": [31, 33], "treatment": [7, 8, 9, 11, 13, 22, 24, 26, 31, 33, 34], "tree": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 20, 24, 28, 29, 32], "treeplott": 20, "trial": 34, "true": [3, 7, 11, 12, 13, 14, 16, 18, 22, 24, 26, 27, 30, 31, 34], "try": 35, "tune": [26, 28, 35], "tupl": [2, 12, 18, 19], "two": [0, 2, 3, 23, 24, 25, 26, 27, 30, 31, 34], "type": [0, 3, 13, 16, 17, 21, 24, 26, 27, 28, 31, 33], "typeerror": 22, "typic": [21, 26, 31, 34], "typo": 23, "u": 25, "ub": 21, "uci": 2, "uncertainti": [2, 14, 28, 35], "under": [7, 21], "understand": [26, 27], "unequ": 31, "unexpl": [26, 27, 28], "unfair": 26, "unfairli": 26, "uniform": [17, 33], "uniqu": [13, 22, 24, 30], "unit": [26, 27, 28], "univers": [24, 27, 28], "unknown": 34, "unlik": 33, "unnecessari": 0, "unqualifi": 31, "unsur": 34, "until": [3, 4, 7, 14], "up": [3, 4, 7, 14, 21, 26, 27, 28], "updat": 18, "uphold": 23, "upon": [0, 7, 31, 33], "upper": [12, 21, 26], "url": 2, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34], "usag": [0, 2, 7], "user": [0, 3, 4, 5, 6, 7, 24, 26, 28, 30, 31, 33], "usernam": [26, 27, 28], "util": [0, 7, 10, 26, 27, 33], "v": [18, 19], "v10": [26, 27, 28], "v2": 27, "v3": 27, "v4": 27, "v5": 27, "valid": [5, 6, 8, 9, 12, 20, 25, 26], "validated_i": 22, "validated_ipw": 22, "validated_y_hat": 22, "valu": [1, 3, 4, 7, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 26, 27, 28, 30, 31, 33, 34, 35], "valueerror": [3, 4, 7, 14, 22], "var_nam": 21, "vari": 33, "variabl": [0, 4, 5, 6, 8, 9, 11, 12, 13, 16, 18, 19, 21, 25, 26, 27, 28], "varianc": 34, "variat": 0, "varieti": 24, "variou": 24, "vayano": [24, 27, 28, 31, 33, 34, 35], "ve": 27, "vector": [2, 26, 31, 33, 34], "verbos": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 21, 24, 26, 27, 28, 30], "veri": 33, "version": [21, 25, 26, 27, 28], "versu": 26, "via": [23, 33], "violat": 19, "virtual": 25, "visual": [0, 2, 3, 7, 9, 11, 13, 14, 27], "vtype": 21, "vulner": 31, "w": [2, 18, 19], "w_valu": [11, 13], "wa": [12, 21, 26, 27, 28], "wai": [23, 24, 26, 27], "walk": 24, "want": [3, 24, 27, 30, 31], "warfarin": 34, "warn": [3, 4], "wasn": 22, "we": [0, 2, 3, 19, 21, 23, 24, 25, 26, 27, 28, 30, 33], "weight": [3, 4, 5, 6, 7, 8, 9, 22, 26, 33], "welcom": 23, "well": [28, 30, 31], "were": [3, 4], "wget": 25, "what": 34, "when": [1, 3, 4, 11, 13, 14, 19, 21, 24, 25, 26, 27, 28, 30, 31, 33, 34], "whenev": 19, "where": [3, 7, 19, 23, 24, 27, 28, 31, 33, 34, 35], "whether": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 19, 21, 22, 26, 30, 31], "which": [0, 1, 3, 4, 7, 14, 19, 21, 24, 25, 26, 27, 28, 30, 33, 34, 35], "while": [0, 3, 4, 14, 19, 26, 30, 31, 33], "white": 27, "who": 31, "whole": 27, "whose": 19, "wide": 33, "width": [12, 17], "window": 25, "within": [0, 2, 3, 14, 27, 33], "without": [27, 33], "word": [30, 31], "work": [25, 26, 27, 28, 33], "workshop": [24, 28, 35], "world": 27, "worri": 24, "worst": 28, "would": [26, 28, 30, 31, 34], "wrapper": 21, "write": [23, 24], "written": 23, "x": [2, 3, 4, 7, 8, 11, 12, 13, 14, 17, 18, 19, 21, 22, 25, 26, 27, 28, 33], "x1": [2, 27, 28], "x2": [2, 27, 28], "x_0": 27, "x_1": 28, "x_2": 28, "x_bin": 17, "x_col_label": 22, "x_new": 7, "x_test": [3, 4, 7, 24, 26, 27, 28], "x_test_bin": 26, "x_test_perturb": 28, "x_train": [3, 4, 7, 24, 26, 27, 28], "x_train_bin": 26, "xi": [18, 19], "xlabel": [12, 26, 27], "y": [2, 3, 4, 7, 8, 11, 12, 13, 14, 17, 22, 24, 26, 27, 28, 33], "y_hat": [7, 22, 34], "y_hat_train": 7, "y_pred": [3, 4, 14], "y_test": [24, 26, 27, 28], "y_train": [3, 4, 7, 24, 26, 27, 28], "year": 31, "yet": [3, 4, 7, 11, 12, 13, 14, 31], "yield": 33, "ylabel": [12, 26, 27], "you": [23, 24, 25, 26, 27, 28, 33], "your": [23, 25, 26, 27, 28], "zero": [12, 26, 31, 33], "zip": 27, "zshrc": 25, "\u03b5": 28}, "titles": ["ODTlearn API", "odtlearn.constrained_oct", "odtlearn.datasets", "odtlearn.fair_oct", "odtlearn.flow_oct", "odtlearn.flow_oct_ms", "odtlearn.flow_oct_ss", "odtlearn.flow_opt", "odtlearn.flow_opt_ms", "odtlearn.flow_opt_ss", "odtlearn", "odtlearn.opt_ct", "odtlearn.opt_dt", "odtlearn.opt_pt", "odtlearn.robust_oct", "odtlearn.utils.Tree", "odtlearn.utils.TreePlotter", "odtlearn.utils.binarize", "odtlearn.utils.callback_helpers", "odtlearn.utils.callbacks", "odtlearn.utils", "odtlearn.utils.solver", "odtlearn.utils.validation", "How to contribute to ODTlearn", "What is ODTlearn?", "Installation Guide", "Fair Optimal Classification Trees", "<code class=\"docutils literal notranslate\"><span class=\"pre\">FlowOCT</span></code> Examples", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RobustOCT</span></code> Examples", "Example Notebooks", "Adding side constraints to optimal classification trees", "Fair Optimal Classification Trees", "User Guide", "Optimal Classification Trees", "Optimal Prescriptive Trees", "Robust Optimal Classification Trees"], "titleterms": {"0": 27, "1": [27, 28, 34], "2": [27, 28, 34], "3": [27, 28, 34], "4": 27, "_lambda": 27, "accuraci": 27, "ad": 30, "addit": 26, "an": 33, "api": 0, "approv": 26, "attribut": [10, 21], "balanc": 27, "bender": 33, "bendersoct": 27, "binar": [17, 27], "binari": 25, "bound": 26, "bug": 23, "callback": 19, "callback_help": 18, "cbc": 25, "choic": 34, "choos": 33, "class": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 21], "classif": [26, 27, 30, 31, 33, 35], "classifi": 26, "code": 23, "comput": 33, "condit": 31, "conduct": 23, "constrained_oct": 1, "constraint": 30, "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22], "contribut": 23, "data": [27, 28], "dataset": [2, 26], "decomposit": 33, "defin": 27, "depth": 27, "differ": 27, "direct": 34, "distribut": 35, "dm": 34, "document": [23, 24], "doubli": 34, "dr": 34, "equal": 31, "exampl": [24, 27, 28, 29], "fair": [26, 31], "fair_oct": 3, "fairspoct": 26, "featur": [33, 34], "file": 23, "flow_oct": 4, "flow_oct_m": 5, "flow_oct_ss": 6, "flow_opt": 7, "flow_opt_m": 8, "flow_opt_ss": 9, "flowoct": 27, "function": [2, 17, 18, 19, 22, 27, 34], "get": 24, "guid": [25, 32], "gurobi": 25, "handl": [33, 34], "how": 23, "i": 24, "improv": 23, "initi": 26, "instal": 25, "integ": [33, 34], "introduct": 26, "invers": 34, "ipw": 34, "learn": 26, "less": 26, "licens": 25, "loan": 26, "method": 34, "metric": [26, 31], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22], "notebook": 29, "object": [27, 33, 34], "obtain": 25, "odd": 31, "odtlearn": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "opportun": 31, "opt_ct": 11, "opt_dt": 12, "opt_pt": 13, "optim": [26, 30, 31, 33, 34, 35], "packag": 10, "pariti": [26, 31], "posit": 27, "predict": 31, "prescript": 34, "propens": 34, "python": 25, "refer": [24, 27, 28, 31, 33, 34, 35], "regular": 33, "report": 23, "resourc": 24, "robust": [34, 35], "robust_oct": 14, "robustoct": 28, "shift": [28, 35], "side": 30, "solver": 21, "specifi": [28, 35], "speed": 33, "start": 24, "statist": [26, 31], "strict": 26, "stricter": 26, "structur": 24, "submodul": [10, 20], "subpackag": 10, "support": 26, "synthet": 28, "tree": [15, 26, 27, 30, 31, 33, 34, 35], "treeplott": 16, "uci": [27, 28], "up": 33, "usag": 24, "user": [27, 32], "util": [15, 16, 17, 18, 19, 20, 21, 22], "valid": 22, "vari": 27, "weight": [27, 34], "what": 24, "without": 28}})